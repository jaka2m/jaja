{
  "version": 3,
  "sources": ["../../../jambol.js", "../../../../home/jules/.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../home/jules/.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-9hSXaz/middleware-insertion-facade.js", "../../../../home/jules/.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-9hSXaz/middleware-loader.entry.ts"],
  "sourceRoot": "/app/.wrangler/tmp/dev-TBYF3v",
  "sourcesContent": ["import { connect } from \"cloudflare:sockets\";\n\nconst proxyListURL = 'https://fstore.web.id/ip3.txt';\nconst namaWeb = 'FSTORE VPN'\nconst telegrambot = 'https://t.me/VLTRSSbot'\nconst channelku = 'https://t.me/testikuy_mang'\nconst telegramku = 'https://t.me/FER1DEV'\nconst whatsappku = 'https://geoproject.biz.id/circle-flags/whatsapp.png'\nconst ope = 'https://geoproject.biz.id/circle-flags/options.png'\n// Variables\nconst rootDomain = \"gpj2.dpdns.org\"; // Ganti dengan domain utama kalian\nconst serviceName = \"tes\"; // Ganti dengan nama workers kalian\nconst apiKey = \"e1d2b64d4da5e42f24c88535f12f21bc84d06\"; // Ganti dengan Global API key kalian (https://dash.cloudflare.com/profile/api-tokens)\nconst apiEmail = \"paoandest@gmail.com\"; // Ganti dengan email yang kalian gunakan\nconst accountID = \"723b4d7d922c6af940791b5624a7cb05\"; // Ganti dengan Account ID kalian (https://dash.cloudflare.com -> Klik domain yang kalian gunakan)\nconst zoneID = \"143d6f80528eae02e7a909f85e5320ab\"; // Ganti dengan Zone ID kalian (https://dash.cloudflare.com -> Klik domain yang kalian gunakan)\nconst ownerPassword = \".\";\n\nconst wildcards = [];\n\n// CloudflareApi Class\nclass CloudflareApi {\n  constructor() {\n    this.bearer = `Bearer ${apiKey}`;\n    this.accountID = accountID;\n    this.zoneID = zoneID;\n    this.apiEmail = apiEmail;\n    this.apiKey = apiKey;\n\n    this.headers = {\n      Authorization: this.bearer,\n      \"X-Auth-Email\": this.apiEmail,\n      \"X-Auth-Key\": this.apiKey,\n      \"Content-Type\": \"application/json\",\n    };\n  }\n\n  async getDomainList() {\n    const url = `https://api.cloudflare.com/client/v4/accounts/${this.accountID}/workers/domains`;\n    const res = await fetch(url, {\n      headers: this.headers,\n    });\n\n    if (res.status == 200) {\n      const respJson = await res.json();\n      return respJson.result.filter((data) => data.service == serviceName);\n    }\n    return [];\n  }\n\n  async registerDomain(domain) {\n    domain = domain.toLowerCase();\n    const suffix = `.${serviceName}.${rootDomain}`;\n    let fullDomain = domain;\n\n    // If the user-provided domain doesn't already end with the suffix, append it.\n    if (!domain.endsWith(suffix)) {\n      fullDomain = domain + suffix;\n    }\n\n    const registeredDomains = await this.getDomainList();\n\n    if (registeredDomains.some(d => d.hostname === fullDomain)) {\n      return 409; // Conflict\n    }\n\n    const url = `https://api.cloudflare.com/client/v4/accounts/${this.accountID}/workers/domains`;\n    const res = await fetch(url, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        environment: \"production\",\n        hostname: fullDomain,\n        service: serviceName,\n        zone_id: this.zoneID,\n      }),\n      headers: this.headers,\n    });\n\n    return res.status;\n  }\n\n  async deleteDomain(domainId) {\n    const url = `https://api.cloudflare.com/client/v4/accounts/${this.accountID}/workers/domains/${domainId}`;\n    const res = await fetch(url, {\n      method: \"DELETE\",\n      headers: this.headers,\n    });\n    return res.status;\n  }\n}\n\n// Global Variables\nlet cachedProxyList = [];\nlet proxyIP = \"\";\n\n// Constants\nconst WS_READY_STATE_OPEN = 1;\nconst WS_READY_STATE_CLOSING = 2;\n\nasync function getProxyList(forceReload = false) {\n  if (!cachedProxyList.length || forceReload) {\n    if (!proxyListURL) {\n      throw new Error(\"No Proxy List URL Provided!\");\n    }\n\n    const proxyBank = await fetch(proxyListURL);\n    if (proxyBank.status === 200) {\n      const proxyString = ((await proxyBank.text()) || \"\").split(\"\\n\").filter(Boolean);\n      cachedProxyList = proxyString\n        .map((entry) => {\n          const [proxyIP, proxyPort, country, org] = entry.split(\",\");\n          return {\n            proxyIP: proxyIP || \"Unknown\",\n            proxyPort: proxyPort || \"Unknown\",\n            country: country.toUpperCase() || \"Unknown\",\n            org: org || \"Unknown Org\",\n          };\n        })\n        .filter(Boolean);\n    }\n  }\n\n  return cachedProxyList;\n}\n\nasync function reverseProxy(request, target) {\n  const targetUrl = new URL(request.url);\n  targetUrl.hostname = target;\n\n  const modifiedRequest = new Request(targetUrl, request);\n  modifiedRequest.headers.set(\"X-Forwarded-Host\", request.headers.get(\"Host\"));\n\n  const response = await fetch(modifiedRequest);\n  const newResponse = new Response(response.body, response);\n  newResponse.headers.set(\"X-Proxied-By\", \"Cloudflare Worker\");\n\n  return newResponse;\n}\n\nexport default {\n  async fetch(request, env, ctx) {\n    try {\n      const url = new URL(request.url);\n\n      // API for wildcard management\n      if (url.pathname.startsWith('/api/v1/domains')) {\n        const cfApi = new CloudflareApi();\n\n        if (request.method === 'GET') {\n          const domains = await cfApi.getDomainList();\n          return new Response(JSON.stringify(domains), {\n            headers: { 'Content-Type': 'application/json' },\n          });\n        }\n\n        if (request.method === 'POST') {\n          try {\n            const { domain } = await request.json();\n            if (!domain) {\n              return new Response('Domain is required', { status: 400 });\n            }\n            const status = await cfApi.registerDomain(domain);\n            return new Response(null, { status });\n          } catch (e) {\n            return new Response('Invalid JSON', { status: 400 });\n          }\n        }\n\n        if (request.method === 'DELETE') {\n          try {\n            const { id, password } = await request.json();\n            if (!id) {\n              return new Response('Domain ID is required', { status: 400 });\n            }\n            if (password !== ownerPassword) {\n                return new Response('Invalid password', { status: 401 });\n            }\n            const status = await cfApi.deleteDomain(id);\n            return new Response(null, { status });\n          } catch (e) {\n            return new Response('Invalid JSON', { status: 400 });\n          }\n        }\n\n        return new Response('Method Not Allowed', { status: 405 });\n      }\n\n      const myurl = \"geovpn.vercel.app\";\n      const upgradeHeader = request.headers.get(\"Upgrade\");\n      const CHECK_API_BASE = `https://${myurl}`;\n      const CHECK_API = `${CHECK_API_BASE}/check?ip=`;\n      \n      // Handle IP check\n      if (url.pathname === \"/geo-ip\") {\n        const ip = url.searchParams.get(\"ip\");\n\n        if (!ip) {\n          return new Response(\"IP parameter is required\", { status: 400 });\n        }\n\n        // Call external API using CHECK_API\n        const apiResponse = await fetch(`${CHECK_API}${ip}`);\n        if (!apiResponse.ok) {\n          return new Response(\"Failed to fetch IP information\", { status: apiResponse.status });\n        }\n\n        const data = await apiResponse.json();\n        return new Response(JSON.stringify(data), {\n          headers: { \"Content-Type\": \"application/json\" },\n        });\n      }      \n\n     const proxyState = new Map();\n\nasync function updateProxies() {\n  const proxies = await getProxyList(env);\n  console.log(\"Proxy list updated (getProxyList called).\");\n}\n\nctx.waitUntil(\n        (async function periodicUpdate() {\n          await updateProxies();\n          setInterval(updateProxies, 60000); // Setiap 60 detik\n        })()\n      );\n\n      if (upgradeHeader === \"websocket\") {\n        // Match path dengan format /CC atau /CCangka\n        const pathMatch = url.pathname.match(/^\\/([A-Z]{2})(\\d+)?$/);\n\n        if (pathMatch) {\n          const countryCode = pathMatch[1];\n          const index = pathMatch[2] ? parseInt(pathMatch[2], 10) - 1 : null;\n\n          console.log(`Country Code: ${countryCode}, Index: ${index}`);\n\n          // Ambil proxy berdasarkan country code\n          const proxies = await getProxyList(env);\n          const filteredProxies = proxies.filter((proxy) => proxy.country === countryCode);\n\n          if (filteredProxies.length === 0) {\n            return new Response(`No proxies available for country: ${countryCode}`, { status: 404 });\n          }\n\n          let selectedProxy;\n\n          if (index === null) {\n            // Ambil proxy acak dari state jika ada\n            selectedProxy = proxyState.get(countryCode) || filteredProxies[0];\n          } else if (index < 0 || index >= filteredProxies.length) {\n            return new Response(\n              `Index ${index + 1} out of bounds. Only ${filteredProxies.length} proxies available for ${countryCode}.`,\n              { status: 400 }\n            );\n          } else {\n            selectedProxy = filteredProxies[index];\n          }\n\n          proxyIP = `${selectedProxy.proxyIP}:${selectedProxy.proxyPort}`;\n          console.log(`Selected Proxy: ${proxyIP}`);\n          return await websockerHandler(request);\n        }\n\n        // Match path dengan format ip:port atau ip=port\n        const ipPortMatch = url.pathname.match(/^\\/(.+[:=-]\\d+)$/);\n\n        if (ipPortMatch) {\n          proxyIP = ipPortMatch[1].replace(/[=:-]/, \":\"); // Standarisasi menjadi ip:port\n          console.log(`Direct Proxy IP: ${proxyIP}`);\n          return await websockerHandler(request, proxyIP);\n        }\n      }\n      \n      const bexx = url.hostname;\n      const type = url.searchParams.get('type') || 'mix';\n      const tls = url.searchParams.get('tls') !== 'true';\n      const wildcard = url.searchParams.get('wildcard') === 'true';\n      const bugs = url.searchParams.get('bug') || bexx;\n      const bexnxx = wildcard ? `${bugs}.${bexx}` : bexx;\n      const country = url.searchParams.get('country');\n      const limit = parseInt(url.searchParams.get('limit'), 10); // Ambil nilai limit\n      let configs;\n\n      switch (url.pathname) {\n        case '/sub/clash':\n          configs = await generateClashSub(type, bugs, bexnxx, tls, country, limit);\n          break;\n        case '/sub/surfboard':\n          configs = await generateSurfboardSub(type, bugs, bexnxx, tls, country, limit);\n          break;\n        case '/sub/singbox':\n          configs = await generateSingboxSub(type, bugs, bexnxx, tls, country, limit);\n          break;\n        case '/sub/husi':\n          configs = await generateHusiSub(type, bugs, bexnxx, tls, country, limit);\n          break;\n        case '/sub/nekobox':\n          configs = await generateNekoboxSub(type, bugs, bexnxx, tls, country, limit);\n          break;\n        case '/sub/v2rayng':\n          configs = await generateV2rayngSub(type, bugs, bexnxx, tls, country, limit);\n          break;\n        case '/sub/v2ray':\n          configs = await generateV2raySub(type, bugs, bexnxx, tls, country, limit);\n          break;\n        case \"/web\":\n          return await handleWebRequest(request);\n          break;\n        case \"/sub\":\n          return new Response(await handleSubRequest(url.hostname), { headers: { 'Content-Type': 'text/html' } })\n          break;\n        default:\n          return await handleWebRequest(request);\n      }\n\n      return new Response(configs);\n    } catch (err) {\n      return new Response(`An error occurred: ${err.toString()}`, {\n        status: 500,\n      });\n    }\n  },\n};\n\n// Helper function: Group proxies by country\nfunction groupBy(array, key) {\n  return array.reduce((result, currentValue) => {\n    (result[currentValue[key]] = result[currentValue[key]] || []).push(currentValue);\n    return result;\n  }, {});\n}\n\nasync function handleSubRequest(hostnem) {\n  const html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Sub Link Generator</title>\n    <link rel=\"preload\" href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700&display=swap\" as=\"style\" onload=\"this.onload=null;this.rel='stylesheet'\">\n    <style>\n        :root {\n            --color-primary: #00ff88;\n            --color-secondary: #00ffff;\n            --color-background: #0a0f1a;\n            --color-card: rgba(15, 22, 36, 0.95);\n            --color-text: #e0f4f4;\n            --transition: all 0.3s ease;\n        }\n\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            outline: none;\n        }\n\n        body {\n            font-family: 'Inter', sans-serif;\n            background: var(--color-background);\n            color: var(--color-text);\n            line-height: 1.6;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            overflow-x: hidden;\n        }\n\n        .container {\n            width: 100%;\n            max-width: 500px;\n            padding: 2rem;\n        }\n\n        .card {\n            background: var(--color-card);\n            border-radius: 16px;\n            padding: 2rem;\n            box-shadow: 0 10px 30px rgba(0, 255, 136, 0.1);\n            backdrop-filter: blur(10px);\n            border: 1px solid rgba(0, 255, 136, 0.2);\n            transition: var(--transition);\n        }\n\n        .title {\n            text-align: center;\n            color: var(--color-primary);\n            margin-bottom: 1.5rem;\n            font-size: 2rem;\n            font-weight: 700;\n        }\n\n        .form-group {\n            margin-bottom: 1rem;\n        }\n\n        .form-group label {\n            display: block;\n            margin-bottom: 0.5rem;\n            color: var(--color-text);\n            font-weight: 500;\n        }\n\n        .form-control {\n            width: 100%;\n            padding: 0.75rem 1rem;\n            background: rgba(0, 255, 136, 0.05);\n            border: 2px solid rgba(0, 255, 136, 0.3);\n            border-radius: 8px;\n            color: var(--color-text);\n            transition: var(--transition);\n        }\n\n        .form-control:focus {\n            border-color: var(--color-secondary);\n            box-shadow: 0 0 0 3px rgba(0, 255, 255, 0.2);\n        }\n\n        .btn {\n            width: 100%;\n            padding: 0.75rem;\n            background: var(--color-primary);\n            color: var(--color-background);\n            border: none;\n            border-radius: 8px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: var(--transition);\n        }\n\n        .btn:hover {\n            background: var(--color-secondary);\n        }\n\n        .result {\n            margin-top: 1rem;\n            padding: 1rem;\n            background: rgba(0, 255, 136, 0.1);\n            border-radius: 8px;\n            word-break: break-all;\n        }\n\n        .loading {\n            display: none;\n            text-align: center;\n            color: var(--color-primary);\n            margin-top: 1rem;\n        }\n\n        .copy-btns {\n            display: flex;\n            justify-content: space-between;\n            margin-top: 0.5rem;\n        }\n\n        .copy-btn {\n            background: rgba(0, 255, 136, 0.2);\n            color: var(--color-primary);\n            padding: 0.5rem;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            transition: var(--transition);\n        }\n\n        .copy-btn:hover {\n            background: rgba(0, 255, 136, 0.3);\n        }\n\n        #error-message {\n            color: #ff4444;\n            text-align: center;\n            margin-top: 1rem;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"card\">\n            <h1 class=\"title\">Sub Link Generator</h1>\n            <form id=\"subLinkForm\">\n                <div class=\"form-group\">\n                    <label for=\"app\">Aplikasi</label>\n                    <select id=\"app\" class=\"form-control\" required>\n                        <option value=\"v2ray\">V2RAY</option>\n                        <option value=\"v2rayng\">V2RAYNG</option>\n                        <option value=\"clash\">CLASH</option>\n                        <option value=\"nekobox\">NEKOBOX</option>\n                        <option value=\"singbox\">SINGBOX</option>\n                        <option value=\"surfboard\">SURFBOARD</option>\n                    </select>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"bug\">Bug</label>\n                    <input type=\"text\" id=\"bug\" class=\"form-control\" placeholder=\"Contoh: quiz.int.vidio.com\" required>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"configType\">Tipe Config</label>\n                    <select id=\"configType\" class=\"form-control\" required>\n                        <option value=\"vless\">VLESS</option>\n                        <option value=\"trojan\">TROJAN</option>\n                        <option value=\"shadowsocks\">SHADOWSOCKS</option>\n                    </select>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"tls\">TLS</label>\n                    <select id=\"tls\" class=\"form-control\">\n                        <option value=\"true\">TRUE</option>\n                        <option value=\"false\">FALSE</option>\n                    </select>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"wildcard\">Wildcard</label>\n                    <select id=\"wildcard\" class=\"form-control\">\n                        <option value=\"true\">TRUE</option>\n                        <option value=\"false\">FALSE</option>\n                    </select>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"country\">Negara</label>\n                    <select id=\"country\" class=\"form-control\">\n                        <option value=\"all\">ALL COUNTRY</option>\n                        <option value=\"random\">RANDOM</option>\n                        <option value=\"id\">INDONESIA</option>\n                        <option value=\"sg\">SINGAPURA</option>\n                        <option value=\"my\">MALAYSIA</option>\n                        <option value=\"jp\">JEPANG</option>\n                        <option value=\"kr\">KOREA</option>\n                        <option value=\"us\">UNITED STATES</option>\n                        <option value=\"gb\">UNITED KINGDOM</option>\n                        <option value=\"hk\">HONGKONG</option>\n                    </select>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"limit\">Jumlah Config</label>\n                    <input type=\"number\" id=\"limit\" class=\"form-control\" min=\"1\" max=\"20\" placeholder=\"Maks 20\" required>\n                </div>\n\n                <button type=\"submit\" class=\"btn\">Generate Sub Link</button>\n            </form>\n\n            <div id=\"loading\" class=\"loading\">Generating Link...</div>\n            <div id=\"error-message\"></div>\n\n            <div id=\"result\" class=\"result\" style=\"display: none;\">\n                <p id=\"generated-link\"></p>\n                <div class=\"copy-btns\">\n                    <button id=\"copyLink\" class=\"copy-btn\">Copy Link</button>\n                    <button id=\"openLink\" class=\"copy-btn\">Buka Link</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        // Performance optimization: Use event delegation and minimize DOM queries\n        document.addEventListener('DOMContentLoaded', () => {\n            const form = document.getElementById('subLinkForm');\n            const loadingEl = document.getElementById('loading');\n            const resultEl = document.getElementById('result');\n            const generatedLinkEl = document.getElementById('generated-link');\n            const copyLinkBtn = document.getElementById('copyLink');\n            const openLinkBtn = document.getElementById('openLink');\n            const errorMessageEl = document.getElementById('error-message');\n            const appSelect = document.getElementById('app');\n            const configTypeSelect = document.getElementById('configType');\n\n            // Cached selectors to minimize DOM lookups\n            const elements = {\n                app: document.getElementById('app'),\n                bug: document.getElementById('bug'),\n                configType: document.getElementById('configType'),\n                tls: document.getElementById('tls'),\n                wildcard: document.getElementById('wildcard'),\n                country: document.getElementById('country'),\n                limit: document.getElementById('limit')\n            };\n\n            // App and config type interaction\n            appSelect.addEventListener('change', () => {\n                const selectedApp = appSelect.value;\n                const shadowsocksOption = configTypeSelect.querySelector('option[value=\"shadowsocks\"]');\n                \n                if (selectedApp === 'surfboard') {\n                    configTypeSelect.value = 'trojan';\n                    configTypeSelect.querySelector('option[value=\"trojan\"]').selected = true;\n                    shadowsocksOption.disabled = true;\n                } else {\n                    shadowsocksOption.disabled = false;\n                }\n            });\n\n            // Form submission handler\n            form.addEventListener('submit', async (e) => {\n                e.preventDefault();\n                \n                // Reset previous states\n                loadingEl.style.display = 'block';\n                resultEl.style.display = 'none';\n                errorMessageEl.textContent = '';\n\n                try {\n                    // Validate inputs\n                    const requiredFields = ['bug', 'limit'];\n                    for (let field of requiredFields) {\n                        if (!elements[field].value.trim()) {\n                            throw new Error(\\`Harap isi \\${field === 'bug' ? 'Bug' : 'Jumlah Config'}\\`);\n                        }\n                    }\n\n                    // Construct query parameters\n                    const params = new URLSearchParams({\n                        type: elements.configType.value,\n                        bug: elements.bug.value.trim(),\n                        tls: elements.tls.value,\n                        wildcard: elements.wildcard.value,\n                        limit: elements.limit.value,\n                        ...(elements.country.value !== 'all' && { country: elements.country.value })\n                    });\n\n                    // Generate full link (replace with your actual domain)\n                    const generatedLink = \\`/sub/\\${elements.app.value}?\\${params.toString()}\\`;\n\n                    // Simulate loading (remove in production)\n                    await new Promise(resolve => setTimeout(resolve, 500));\n\n                    // Update UI\n                    loadingEl.style.display = 'none';\n                    resultEl.style.display = 'block';\n                    generatedLinkEl.textContent = \\`https://\\${window.location.hostname}\\${generatedLink}\\`;\n\n                    // Copy link functionality\n                    copyLinkBtn.onclick = async () => {\n                        try {\n                            await navigator.clipboard.writeText(\\`https://\\${window.location.hostname}\\${generatedLink}\\`);\n                            alert('Link berhasil disalin!');\n                        } catch {\n                            alert('Gagal menyalin link.');\n                        }\n                    };\n\n                    // Open link functionality\n                    openLinkBtn.onclick = () => {\n                        window.open(generatedLink, '_blank');\n                    };\n\n                } catch (error) {\n                    // Error handling\n                    loadingEl.style.display = 'none';\n                    errorMessageEl.textContent = error.message;\n                    console.error(error);\n                }\n            });\n        });\n    </script>\n</body>\n</html>\n `\nreturn html\n}\n\nasync function handleWebRequest(request) {\n    const cfApi = new CloudflareApi();\n    const dynamicDomains = await cfApi.getDomainList();\n    const suffixToRemove = `.${serviceName}.${rootDomain}`;\n    // Pastikan untuk menangani domain yang mungkin tidak memiliki akhiran yang diharapkan\n    const dynamicWildcards = dynamicDomains.map(d => \n        d.hostname.endsWith(suffixToRemove) \n            ? d.hostname.slice(0, -suffixToRemove.length) \n            : d.hostname\n    );\n    \n    // Gabungkan wildcard statis dan dinamis, lalu hapus duplikat\n    const allWildcards = [...new Set([...wildcards, ...dynamicWildcards])];\n    const apiUrl = proxyListURL;\n\n    const fetchConfigs = async () => {\n      try {\n        const response = await fetch(apiUrl);\n        const text = await response.text();\n        \n        let pathCounters = {};\n\n        const configs = text.trim().split('\\n').map((line) => {\n          const [ip, port, countryCode, isp] = line.split(',');\n          \n          if (!pathCounters[countryCode]) {\n            pathCounters[countryCode] = 1;\n          }\n          \n          const path = `/${countryCode}${pathCounters[countryCode]}`;\n          pathCounters[countryCode]++;\n\n          return { ip, port, countryCode, isp, path };\n        });\n\n        return configs;\n      } catch (error) {\n        console.error('Error fetching configurations:', error);\n        return [];\n      }\n    };\n\n    const generateUUIDv4 = () => {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      });\n    };\n\n    const getFlagEmoji = (countryCode) => {\n      if (!countryCode) return '\uD83C\uDFF3\uFE0F';\n      return countryCode\n        .toUpperCase()\n        .split('')\n        .map((char) => String.fromCodePoint(0x1f1e6 - 65 + char.charCodeAt(0)))\n        .join('');\n    };\n\n    const url = new URL(request.url);\n    const hostName = url.hostname;\n    const page = parseInt(url.searchParams.get('page')) || 1;\n    const searchQuery = url.searchParams.get('search') || '';\n    const selectedWildcard = url.searchParams.get('wildcard') || null;\n    const selectedConfigType = url.searchParams.get('configType') || 'tls'; // Ambil nilai 'configType' atau gunakan default 'tls'\n    const configsPerPage = 20;\n\n    const configs = await fetchConfigs();\n    const totalConfigs = configs.length;\n\n    let filteredConfigs = configs;\n    if (searchQuery.includes(':')) {\n        // Search by IP:PORT format\n        filteredConfigs = configs.filter((config) => \n            `${config.ip}:${config.port}`.includes(searchQuery)\n        );\n    } else if (searchQuery.length === 2) {\n        // Search by country code (if it's two characters)\n        filteredConfigs = configs.filter((config) =>\n            config.countryCode.toLowerCase().includes(searchQuery.toLowerCase())\n        );\n    } else if (searchQuery.length > 2) {\n        // Search by IP, ISP, or country code\n        filteredConfigs = configs.filter((config) =>\n            config.ip.toLowerCase().includes(searchQuery.toLowerCase()) ||\n            (`${config.ip}:${config.port}`).includes(searchQuery.toLowerCase()) ||\n            config.isp.toLowerCase().includes(searchQuery.toLowerCase())\n        );\n    }\n\n    const totalFilteredConfigs = filteredConfigs.length;\n    const totalPages = Math.ceil(totalFilteredConfigs / configsPerPage);\n    const startIndex = (page - 1) * configsPerPage;\n    const endIndex = Math.min(startIndex + configsPerPage, totalFilteredConfigs);\n    const visibleConfigs = filteredConfigs.slice(startIndex, endIndex);\n\n    const configType = url.searchParams.get('configType') || 'tls';\n\n    const tableRows = visibleConfigs\n      .map((config) => {\n        const uuid = generateUUIDv4();\n        const wildcard = selectedWildcard || hostName;\n        const modifiedHostName = selectedWildcard ? `${selectedWildcard}.${hostName}` : hostName;\n        const url = new URL(request.url);\n       const BASE_URL = `https://${url.hostname}`; \n       const CHECK_API = `${BASE_URL}/geo-ip?ip=`; \n        const ipPort = `${config.ip}:${config.port}`;\n        const healthCheckUrl = `${CHECK_API}${ipPort}`;\n        const path2 = encodeURIComponent(`/${config.ip}=${config.port}`);\n\n        if (configType === 'tls') {\n            return `\n                <tr class=\"config-row\">\n                    <td class=\"ip-cell\">${config.ip}:${config.port}</td>\n                    <td class=\"proxy-status\" id=\"status-${ipPort}\"><strong><i class=\"fas fa-spinner fa-spin loading-icon\"></i></td>\n                    <td class=\"country-cell\">${config.countryCode} ${getFlagEmoji(config.countryCode)}</td>\n                    <td class=\"isp-cell\">${config.isp}</td>\n                    <td class=\"path-cell\">${config.path}</td>\n                    <td class=\"button-cell\">\n                        <button class=\"copy-btn vless\" onclick=\"copy('${`vless://${uuid}@${wildcard}:443?encryption=none&security=tls&sni=${modifiedHostName}&fp=randomized&type=ws&host=${modifiedHostName}&path=${encodeURIComponent(config.path.toUpperCase())}#(${config.countryCode})%20${config.isp.replace(/\\s/g,'%20')}${getFlagEmoji(config.countryCode)}`}')\">\n                            <span class=\"btn-icon\">\uD83D\uDCCB</span> VLESS\n                        </button>\n                    </td>\n                    <td class=\"button-cell\">\n                        <button class=\"copy-btn trojan\" onclick=\"copy('${`trojan://${uuid}@${wildcard}:443?encryption=none&security=tls&sni=${modifiedHostName}&fp=randomized&type=ws&host=${modifiedHostName}&path=${encodeURIComponent(config.path.toUpperCase())}#(${config.countryCode})%20${config.isp.replace(/\\s/g,'%20')}${getFlagEmoji(config.countryCode)}`}')\">\n                            <span class=\"btn-icon\">\uD83D\uDCCB</span> TROJAN\n                        </button>\n                    </td>\n                    <td class=\"button-cell\">\n                        <button class=\"copy-btn shadowsocks\" onclick=\"copy('${`ss://${btoa(`none:${uuid}`)}%3D@${wildcard}:443?encryption=none&type=ws&host=${modifiedHostName}&path=${encodeURIComponent(config.path.toUpperCase())}&security=tls&sni=${modifiedHostName}#(${config.countryCode})%20${config.isp.replace(/\\s/g,'%20')}${getFlagEmoji(config.countryCode)}`}')\">\n                            <span class=\"btn-icon\">\uD83D\uDCCB</span> Shadowsocks\n                        </button>\n                    </td>\n                </tr>\n<script>\n          fetch('${healthCheckUrl}')\n            .then(response => response.json())\n            .then(data => {\n              const statusElement = document.getElementById('status-${ipPort}');\n              const spinner = document.getElementById('ping-' + data.proxy + ':' + data.port);\n\n      // Ambil data status dan delay\n            const status = data.status || 'UNKNOWN';\n            let delay = parseFloat(data.delay) || 'N/A';\n\n            console.log(\"Status:\", status);\n            console.log(\"Raw delay:\", data.delay);\n            console.log(\"Parsed delay:\", delay);\n\n            const divisor = 4; \n\n            if (!isNaN(delay)) {\n                delay = Math.round(delay / divisor);\n                console.log(\"Processed delay:\", delay);  // Debugging log\n            }\n\n            if (status === 'ACTIVE') {\n                statusElement.innerHTML = 'ACTIVE<br><span style=\"fas fa-bolt\"></i>&nbsp;<span style=\"color: gold;\">(' + delay + 'ms)</span>'; \n                statusElement.style.color = '#00FF00';\n                statusElement.style.fontSize = '13px';\n                statusElement.style.fontWeight = 'bold';\n            } else if (status === 'DEAD') {\n                statusElement.innerHTML = '<strong><i class=\"fas fa-times-circle\"></i> DEAD</strong>';\n                statusElement.style.color = '#FF3333';\n                statusElement.style.fontSize = '13px';\n                statusElement.style.fontWeight = 'bold';\n            }\n        })\n        .catch(error => {\n              const statusElement = document.getElementById('status-${ipPort}');\n              statusElement.textContent = 'Error';\n              statusElement.style.color = 'cyan';\n            });\n        </script>\n\n\n`;\n        } else {\n            return `\n                <tr class=\"config-row\">\n                    <td class=\"ip-cell\">${config.ip}:${config.port}</td>\n                    <td class=\"proxy-status\" id=\"status-${ipPort}\"><strong><i class=\"fas fa-spinner fa-spin loading-icon\"></i></td>\n                    <td class=\"country-cell\">${config.countryCode} ${getFlagEmoji(config.countryCode)}</td>\n                    <td class=\"isp-cell\">${config.isp}</td>\n                    <td class=\"path-cell\">${config.path}</td>\n                    <td class=\"button-cell\">\n                        <button class=\"copy-btn vless\" onclick=\"copy('${`vless://${uuid}@${wildcard}:80?path=${encodeURIComponent(config.path.toUpperCase())}&security=none&encryption=none&host=${modifiedHostName}&fp=randomized&type=ws&sni=${modifiedHostName}#(${config.countryCode})%20${config.isp.replace(/\\s/g,'%20')}${getFlagEmoji(config.countryCode)}`}')\">\n                            <span class=\"btn-icon\">\uD83D\uDCCB</span> VLESS\n                        </button>\n                    </td>\n                    <td class=\"button-cell\">\n                        <button class=\"copy-btn trojan\" onclick=\"copy('${`trojan://${uuid}@${wildcard}:80?path=${encodeURIComponent(config.path.toUpperCase())}&security=none&encryption=none&host=${modifiedHostName}&fp=randomized&type=ws&sni=${modifiedHostName}#(${config.countryCode})%20${config.isp.replace(/\\s/g,'%20')}${getFlagEmoji(config.countryCode)}`}')\">\n                            <span class=\"btn-icon\">\uD83D\uDCCB</span> TROJAN\n                        </button>\n                    </td>\n                    <td class=\"button-cell\">\n                        <button class=\"copy-btn shadowsocks\" onclick=\"copy('${`ss://${btoa(`none:${uuid}`)}%3D@${wildcard}:80?encryption=none&type=ws&host=${modifiedHostName}&path=${encodeURIComponent(config.path.toUpperCase())}&security=none&sni=${modifiedHostName}#(${config.countryCode})%20${config.isp.replace(/\\s/g,'%20')}${getFlagEmoji(config.countryCode)}`}')\">\n                            <span class=\"btn-icon\">\uD83D\uDCCB</span> Shadowsocks\n                        </button>\n                    </td>\n                </tr>\n<script>\n          fetch('${healthCheckUrl}')\n            .then(response => response.json())\n            .then(data => {\n              const statusElement = document.getElementById('status-${ipPort}');\n              const spinner = document.getElementById('ping-' + data.proxy + ':' + data.port);\n\n      // Ambil data status dan delay\n            const status = data.status || 'UNKNOWN';\n            let delay = parseFloat(data.delay) || 'N/A';\n\n            console.log(\"Status:\", status);\n            console.log(\"Raw delay:\", data.delay);\n            console.log(\"Parsed delay:\", delay);\n\n            const divisor = 4; \n\n            if (!isNaN(delay)) {\n                delay = Math.round(delay / divisor);\n                console.log(\"Processed delay:\", delay);  // Debugging log\n            }\n\n            if (status === 'ACTIVE') {\n                statusElement.innerHTML = 'ACTIVE<br><span style=\"fas fa-bolt\"></i>&nbsp;<span style=\"color: gold;\">(' + delay + 'ms)</span>'; \n                statusElement.style.color = '#00FF00';\n                statusElement.style.fontSize = '13px';\n                statusElement.style.fontWeight = 'bold';\n            } else if (status === 'DEAD') {\n                statusElement.innerHTML = '<strong><i class=\"fas fa-times-circle\"></i> DEAD</strong>';\n                statusElement.style.color = '#FF3333';\n                statusElement.style.fontSize = '13px';\n                statusElement.style.fontWeight = 'bold';\n            }\n        })\n        .catch(error => {\n              const statusElement = document.getElementById('status-${ipPort}');\n              statusElement.textContent = 'Error';\n              statusElement.style.color = 'cyan';\n            });\n        </script>\n\n\n`;\n        }\n      })\n      .join('');\n\n    const paginationButtons = [];\n    const pageRange = 2;\n\n    for (let i = Math.max(1, page - pageRange); i <= Math.min(totalPages, page + pageRange); i++) {\n      paginationButtons.push(\n        `<a href=\"?page=${i}&wildcard=${encodeURIComponent(selectedWildcard)}&configType=${encodeURIComponent(selectedConfigType)}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}\" class=\"pagination-number ${i === page ? 'active' : ''}\">${i}</a>`\n      );\n    }\n\n    const prevPage = page > 1\n      ? `<a href=\"?page=${page - 1}&wildcard=${encodeURIComponent(selectedWildcard)}&configType=${encodeURIComponent(selectedConfigType)}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}\" class=\"pagination-arrow\">\u25C1</a>`\n      : '';\n\n    const nextPage = page < totalPages\n      ? `<a href=\"?page=${page + 1}&wildcard=${encodeURIComponent(selectedWildcard)}&configType=${encodeURIComponent(selectedConfigType)}${searchQuery ? `&search=${encodeURIComponent(searchQuery)}` : ''}\" class=\"pagination-arrow\">\u25B7</a>`\n      : '';\n\n  return new Response(`\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>FSTORE VPN</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Rajdhani:wght@400;500;600;700&family=Space+Grotesk:wght@400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <style>\n      :root {\n        --primary: #00ff88;\n        --secondary: #00ffff;\n        --accent: #ff00ff;\n        --dark: #080c14;\n        --darker: #040608;\n        --light: #e0ffff;\n        --card-bg: rgba(8, 12, 20, 0.95);\n        --glow: 0 0 20px rgba(0, 255, 136, 0.3);\n      }\n\n      * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        font-family: 'Space Grotesk', sans-serif;\n      }\n\n      body {\n        background: var(--darker);\n        color: var(--light);\n        min-height: 85vh;\n        background-image: \n          radial-gradient(circle at 0% 0%, rgba(0, 255, 136, 0.1) 0, transparent 50%),\n          radial-gradient(circle at 100% 100%, rgba(0, 255, 255, 0.1) 0, transparent 50%),\n          url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%2300ff88' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n      }\n\n      .wildcard-dropdown {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 0.5rem;\n        margin: 0.5rem auto;\n      }\n\n      select {\n        width: 100%;\n        max-width: 200px; /* Lebar box lebih kecil */\n        padding: 0.4rem 0.6rem; /* Sesuaikan padding */\n        font-size: 0.8rem; /* Ukuran teks lebih kecil */\n        color: var(--light);\n        background: rgba(0, 255, 136, 0.05);\n        border: 2px solid rgba(0, 255, 136, 0.3);\n        border-radius: 10px;\n        box-shadow: var(--glow);\n        outline: none;\n        font-family: 'Rajdhani', sans-serif;\n        font-weight: 600;\n        text-transform: uppercase;\n        letter-spacing: 1px;\n        appearance: none; /* Hilangkan panah default */\n        background-image: url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"%23e0ffff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"%3E%3Cpath d=\"M6 9l6 6 6-6\"%3E%3C/path%3E%3C/svg%3E');\n        background-position: right 10px center;\n        background-repeat: no-repeat;\n        background-size: 1rem;\n        transition: all 0.3s ease;\n      }\n\n      select:hover {\n        border-color: var(--primary);\n        box-shadow: 0 0 20px rgba(0, 255, 136, 0.2);\n      }\n\n      select:focus {\n        border-color: var(--secondary);\n        background: rgba(0, 255, 136, 0.1);\n        box-shadow: 0 0 20px var(--secondary);\n      }\n\n      .button-style {\n        padding: 0.6rem 1rem; /* Ukuran padding */\n        font-family: 'Rajdhani', sans-serif; /* Font */\n        font-weight: 600; /* Ketebalan font */\n        font-size: 0.6rem; /* Ukuran font */\n        color: var(--dark); /* Warna teks */\n        background: var(--primary); /* Warna background */\n        border: none; /* Hilangkan border */\n        border-radius: 12px; /* Radius untuk efek bulat */\n        cursor: pointer; /* Ubah kursor saat hover */\n        transition: all 0.3s ease; /* Efek transisi */\n        text-transform: uppercase; /* Teks kapitalisasi */\n        letter-spacing: 1px; /* Jarak antar huruf */\n        position: relative; /* Relatif untuk animasi */\n        overflow: hidden; /* Sembunyikan elemen overflow */\n        display: flex; /* Flexbox */\n        align-items: center; /* Ratakan secara vertikal */\n        justify-content: center; /* Ratakan secara horizontal */\n        gap: 0.5rem; /* Jarak antar elemen */\n      }\n\n      .button-style::before {\n        content: ''; /* Pseudo-element */\n        position: absolute; /* Posisi absolut */\n        top: 0;\n        left: -100%; /* Mulai dari luar */\n        width: 100%; /* Lebar penuh */\n        height: 100%; /* Tinggi penuh */\n        background: linear-gradient(\n          90deg,\n          transparent,\n          rgba(255, 255, 255, 0.2),\n          transparent\n        ); /* Efek gradient */\n        transition: 0.5s; /* Durasi transisi */\n      }\n\n      .button-style:hover::before {\n        left: 100%; /* Gerakkan gradient ke kanan */\n       }\n\n      .button-style:hover {\n        transform: translateY(-2px); /* Efek hover */\n        box-shadow: 0 5px 15px rgba(0, 255, 136, 0.3); /* Bayangan */\n      }\n\n      .button-style:active {\n        transform: translateY(1px); /* Efek klik */\n        box-shadow: 0 3px 10px rgba(0, 255, 136, 0.2); /* Reduksi bayangan */\n      }\n\n      .quantum-container {\n        max-width: 1200px;\n        margin: 2rem auto;\n        padding: 2rem;\n        perspective: 1000px;\n      }\n\n      .quantum-card {\n        max-width: 100%;\n        background: var(--card-bg);\n        backdrop-filter: blur(10px);\n        border: 1px solid rgba(0, 255, 136, 0.2);\n        border-radius: 20px;\n        padding: 2rem;\n        box-shadow: var(--glow);\n        transform-style: preserve-3d;\n        animation: cardFloat 6s ease-in-out infinite;\n      }\n\n      @keyframes cardFloat {\n        0%, 100% { transform: translateY(0) rotateX(0); }\n        50% { transform: translateY(-10px) rotateX(2deg); }\n      }\n\n      .quantum-title {\n        font-family: 'Rajdhani', sans-serif;\n        font-size: 4rem;\n        font-weight: 700;\n        text-align: center;\n        margin-top: 1rem;\n        margin-bottom: 2rem;\n        background: linear-gradient(45deg, var(--primary), var(--secondary));\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        text-shadow: 0 0 30px rgba(0, 255, 136, 0.5);\n        position: relative;\n        animation: titlePulse 3s ease-in-out infinite;\n      }\n\n      @keyframes titlePulse {\n        0%, 100% { transform: scale(1); filter: brightness(1); }\n        50% { transform: scale(1.02); filter: brightness(1.2); }\n      }\n\n      .search-quantum {\n        position: relative;\n        margin-top: 0.6rem;\n        margin-bottom: 0.3rem;\n      }\n\n      #search-bar {\n        width: 100%;\n        padding: 0.6rem 1rem;\n        font-size: 0.6rem;\n        color: var(--light);\n        background: rgba(0, 255, 136, 0.05);\n        border: 2px solid rgba(0, 255, 136, 0.3);\n        border-radius: 15px;\n        transition: all 0.3s ease;\n      }\n\n      #search-bar:focus {\n        outline: none;\n        border-color: var(--primary);\n        box-shadow: 0 0 20px rgba(0, 255, 136, 0.2);\n        background: rgba(0, 255, 136, 0.1);\n      }\n\n      .quantum-table {\n        width: 100%;\n        min-width: 800px;\n        border-collapse: separate;\n        border-spacing: 0 8px;\n      }\n\n      .quantum-table th {\n        background: rgba(0, 255, 136, 0.1);\n        color: var(--primary);\n        padding: 1.2rem;\n        font-family: 'Rajdhani', sans-serif;\n        font-weight: 600;\n        font-size: 1.1rem;\n        text-transform: uppercase;\n        letter-spacing: 2px;\n        border-bottom: 2px solid var(--primary);\n        white-space: nowrap;\n        position: sticky;\n        top: 0;\n        z-index: 10;\n      }\n\n      .quantum-table td {\n        padding: 1rem;\n        background: rgba(0, 255, 136, 0.03);\n        border: none;\n        transition: all 0.3s ease;\n      }\n\n      .quantum-table tr {\n        transition: all 0.3s ease;\n      }\n\n      .quantum-table tr:hover td {\n        background: rgba(0, 255, 136, 0.08);\n        transform: scale(1.01);\n        box-shadow: 0 5px 15px rgba(0, 255, 136, 0.1);\n      }\n\n      .copy-btn {\n        padding: 0.8rem 1.5rem;\n        font-family: 'Rajdhani', sans-serif;\n        font-weight: 600;\n        font-size: 0.9rem;\n        color: var(--dark);\n        background: var(--primary);\n        border: none;\n        border-radius: 12px;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        text-transform: uppercase;\n        letter-spacing: 1px;\n        position: relative;\n        overflow: hidden;\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.5rem;\n      }\n\n      .copy-btn::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n        transition: 0.5s;\n      }\n\n      .copy-btn:hover::before {\n        left: 100%;\n      }\n\n      .copy-btn:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 5px 15px rgba(0, 255, 136, 0.3);\n      }\n\n      .btn-icon {\n        font-size: 1.2rem;\n      }\n\n      .quantum-pagination {\n        display: flex;\n        justify-content: center;\n        gap: 0.8rem;\n        margin-top: 2rem;\n        flex-wrap: wrap;\n      }\n\n      .quantum-pagination a {\n        padding: 0.8rem 1.5rem;\n        background: rgba(0, 255, 136, 0.1);\n        color: var(--primary);\n        text-decoration: none;\n        border-radius: 12px;\n        border: 1px solid rgba(0, 255, 136, 0.3);\n        transition: all 0.3s ease;\n        font-family: 'Rajdhani', sans-serif;\n        font-weight: 600;\n        min-width: 45px;\n        text-align: center;\n      }\n\n      .quantum-pagination a:hover,\n      .quantum-pagination a.active {\n        background: var(--primary);\n        color: var(--dark);\n        transform: translateY(-2px);\n        box-shadow: 0 5px 15px rgba(0, 255, 136, 0.2);\n      }\n\n      .quantum-toast {\n        position: fixed;\n        bottom: 2rem;\n        right: 2rem;\n        padding: 1rem 2rem;\n        background: var(--primary);\n        color: var(--dark);\n        border-radius: 12px;\n        font-family: 'Rajdhani', sans-serif;\n        font-weight: 600;\n        box-shadow: 0 5px 15px rgba(0, 255, 136, 0.3);\n        transform: translateY(100%);\n        opacity: 0;\n        animation: toastSlide 0.3s forwards;\n        z-index: 1000;\n      }\n\n      @keyframes toastSlide {\n        to {\n          transform: translateY(0);\n          opacity: 1;\n        }\n      }\n\n      /* Mobile Responsiveness */\n      @media (max-width: 768px) {\n        .quantum-container {\n          padding: 0.5rem;\n          margin: 0.5rem;\n        }\n        \n        .quantum-card {\n          padding: 1rem;\n          margin: 0;\n          width: 100%;\n          border-radius: 10px;\n          max-width: 100%;\n        }\n    \n        .quantum-title {\n          font-size: 2rem;\n          margin-bottom: 1rem;\n        }\n    \n        #search-bar {\n          padding: 0.6rem 1rem;\n          font-size: 0.6rem;\n        }\n    \n        .table-wrapper {\n          margin: 0.5rem 0;\n          padding: 0;\n          border-radius: 10px;\n          max-height: 60vh; /* Restrict the height of the table */\n          overflow-y: auto; /* Allow scrolling within the table */\n          background: rgba(0, 255, 136, 0.02);\n        }\n    \n        .quantum-table th,\n        .quantum-table td {\n          padding: 0.8rem 0.5rem;\n          font-size: 0.9rem;\n        }\n    \n        .copy-btn {\n          padding: 0.6rem 1rem;\n          font-size: 0.8rem;\n        }\n     \n        .quantum-pagination {\n          gap: 0.5rem;\n          flex-wrap: wrap;\n        }\n    \n        .quantum-pagination a {\n          padding: 0.5rem 0.7rem;\n          font-size: 0.7rem;\n          min-width: 30px;\n        }\n    \n        .quantum-toast {\n          left: 1rem;\n          right: 1rem;\n          bottom: 1rem;\n          text-align: center;\n        }\n      }\n\n      @media (max-width: 480px) {\n        .quantum-card {\n          padding: 0.5rem;\n          max-width: 100%;\n        }\n    \n        .quantum-title {\n          font-size: 1.5rem;\n        }\n    \n        .table-wrapper {\n          margin: 0.5rem -0.5rem;\n          padding: 0 0.5rem;\n        }\n    \n        .quantum-table {\n          font-size: 0.8rem;\n        }\n    \n        .copy-btn {\n          padding: 0.5rem 0.8rem;\n          font-size: 0.7rem;\n        }\n      }\n\n      .table-wrapper {\n        width: 100%;\n        max-height: calc(80vh - 200px); /* Atur tinggi maksimal untuk scroll */\n        overflow-y: auto; /* Aktifkan scroll vertikal */\n        -webkit-overflow-scrolling: touch; /* Lancar di perangkat touch */\n        margin: 1rem 0;\n        border-radius: 10px;\n        background: rgba(0, 255, 136, 0.02);\n      }\n\n      .table-wrapper:hover {\n        pointer-events: auto; /* Izinkan scroll pada hover */\n      }\n\n      /* Perbaikan pada scrollbar */\n      .table-wrapper::-webkit-scrollbar {\n        width: 8px;\n        height: 8px;\n      }\n\n      .table-wrapper::-webkit-scrollbar-track {\n        background: rgba(0, 255, 136, 0.1);\n        border-radius: 4px;\n      }\n\n      .table-wrapper::-webkit-scrollbar-thumb {\n        background: var(--primary);\n        border-radius: 4px;\n      }\n\n      .table-wrapper::-webkit-scrollbar-thumb:hover {\n        background: var(--secondary);\n      }\n    </style>\n</head>\n<body>\n    <div class=\"quantum-container\">\n        <div class=\"quantum-card\">\n            <h1 class=\"quantum-title\">\n              <a href=\"${telegramku}\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"font-family: 'Rajdhani', sans-serif;\">\n                ${namaWeb}\n              </a>\n            </h1>\n            \n            <div class=\"search-quantum\" style=\"display: flex; align-items: center; flex-direction: column;\">\n              <div style=\"display: flex; width: 100%;\">\n                <input type=\"text\" \n                  id=\"search-bar\" \n                  placeholder=\"Search by IP, CountryCode, or ISP\"\n                  value=\"${searchQuery}\" \n                  style=\"flex: 1; padding: 8px;\"/>\n                <button id=\"search-button\" class=\"button-style\">Search</button>\n              </div>\n              ${searchQuery\n                ? `<button id=\"home-button\" class=\"button-style\" style=\"margin-top: 0.4rem;\" onclick=\"goToHomePage('${hostName}')\">\n                  Home Page\n                </button>`\n                : ''}\n            </div>\n            \n            <div class=\"wildcard-dropdown\"> \n        <button onclick=\"toggleWildcardsWindow()\" class=\"bg-gradient-to-r from-green-500 to-green-700 text-white rounded-full p-1.5 transition-colors duration-200 hover:from-green-700 hover:to-green-900 shadow-md\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" class=\"size-4\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 9V4.5M9 9H4.5M9 9 3.75 3.75M9 15v4.5M9 15H4.5M9 15l-5.25 5.25M15 9h4.5M15 9V4.5M15 9l5.25-5.25M15 15h4.5M15 15v4.5m0-4.5 5.25 5.25\" />\n    </svg>\n</button>\n              <select id=\"wildcard\" name=\"wildcard\" onchange=\"onWildcardChange(event)\">\n                <option value=\"\" ${!selectedWildcard ? 'selected' : ''}>No Wildcard</option>\n                {/* Perbaikan: Menggunakan allWildcards untuk memuat semua domain yang terdaftar */}\n                ${allWildcards.map(w => `<option value=\"${w}\" ${selectedWildcard === w ? 'selected' : ''}>${w}</option>`).join('')}\n              </select>\n\n              <select id=\"configType\" name=\"configType\" onchange=\"onConfigTypeChange(event)\">\n                <option value=\"tls\" ${selectedConfigType === 'tls' ? 'selected' : ''}>TLS</option>\n                <option value=\"non-tls\" ${selectedConfigType === 'non-tls' ? 'selected' : ''}>NON TLS</option>\n              </select>\n            </div>\n\n            <div class=\"table-wrapper\">\n              <table class=\"quantum-table\">\n                <thead>\n                    <tr>\n                        <th>IP:PORT</th>\n                        <th>STATUS IP</th>\n                        <th>COUNTRY</th>\n                        <th>ISP</th>\n                        <th>PATH</th>\n                        <th>VLESS</th>\n                        <th>TROJAN</th>\n                        <th>SHADOWSOCKS</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    ${tableRows}\n                </tbody>\n              </table>\n            </div>\n\n            <div class=\"quantum-pagination\">\n                ${prevPage}\n                ${paginationButtons.join('')}\n                ${nextPage}\n            </div>\n          <!-- Showing X to Y of Z Proxies message -->\n          <div style=\"text-align: center; margin-top: 16px; color: var(--primary); font-family: 'Rajdhani', sans-serif;\">\n            Showing ${startIndex + 1} to ${endIndex} of ${totalFilteredConfigs} Proxies\n          </div>\n        </div>\n    </div>\n\n<div id=\"wildcards-window\" class=\"fixed hidden z-30 top-0 right-0 w-full h-full flex justify-center items-center\">\n  <div class=\"w-[75%] max-w-md h-auto flex flex-col gap-2 p-4 rounded-lg \n              bg-blue-500 bg-opacity-20 backdrop-blur-md \n              border border-blue-300 text-white\"> \n      \n      <!-- Input add domain -->\n      <div class=\"flex w-full h-full gap-2 justify-between\">\n          <input id=\"new-domain-input\" \n                 type=\"text\" \n                 placeholder=\"Input wildcard\" \n                 class=\"w-full px-4 py-2 rounded-md bg-gray-700 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"/>\n          <button id=\"add-domain-button\" onclick=\"registerDomain()\" \n                  class=\"p-2 rounded-full bg-blue-600 hover:bg-blue-700 flex justify-center items-center text-white\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"size-6\">\n                  <path fill-rule=\"evenodd\" d=\"M16.72 7.72a.75.75 0 0 1 1.06 0l3.75 3.75a.75.75 0 0 1 0 1.06l-3.75 3.75a.75.75 0 1 1-1.06-1.06l2.47-2.47H3a.75.75 0 0 1 0-1.5h16.19l-2.47-2.47a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\"/>\n              </svg>\n          </button>\n      </div>\n\n      <!-- Container list domain -->\n      <div id=\"container-domains\" \n           class=\"w-full h-32 rounded-md flex flex-col gap-1 overflow-y-scroll scrollbar-hide p-2 bg-gray-900 text-white\">\n      </div>\n  \n      <!-- Input delete domain -->\n      <div class=\"flex w-full h-full gap-2 justify-between\">\n          <input id=\"delete-domain-input\" \n                 type=\"number\" \n                 placeholder=\"Input Nomor\" \n                 class=\"w-full px-4 py-2 rounded-md bg-gray-700 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"/>\n          <input id=\"delete-domain-password\" \n                 type=\"password\" \n                 placeholder=\"Input Password\" \n                 class=\"w-full px-4 py-2 rounded-md bg-gray-700 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"/>\n          <button id=\"delete-domain-button\" onclick=\"deleteDomainByNumber()\" \n                  class=\"p-2 rounded-full bg-red-600 hover:bg-red-700 flex justify-center items-center text-white\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"size-6\">\n                  <path fill-rule=\"evenodd\" d=\"M16.5 4.478v.227a48.816 48.816 0 0 1 3.878.512.75.75 0 1 1-.256 1.478l-.209-.035-1.005 13.07a3 3 0 0 1-2.991 2.77H8.084a3 3 0 0 1-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 0 1-.256-1.478A48.567 48.567 0 0 1 7.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 0 1 3.369 0c1.603.051 2.815 1.387 2.815 2.951Zm-6.136-1.452a51.196 51.196 0 0 1 3.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 0 0-6 0v-.113c0-.794.609-1.428 1.364-1.452Zm-.355 5.945a.75.75 0 1 0-1.5.058l.347 9a.75.75 0 1 0 1.499-.058l-.346-9Zm5.48.058a.75.75 0 1 0-1.498-.058l-.347 9a.75.75 0 0 0 1.5.058l.345-9Z\" clip-rule=\"evenodd\" />\n              </svg>\n          </button>\n      </div>\n\n      <!-- Loading indicator -->\n      <div id=\"wildcard-loading\" class=\"hidden w-full text-center\">\n          <div class=\"popup-progress\">\n              <div class=\"popup-progress-fill\" id=\"popupProgress\"></div>\n          </div>\n          <p style=\"margin-top: 10px; font-size: 0.9em; color: #aaa;\">Loading...</p>\n      </div>\n\n      <!-- Close button -->\n      <button onclick=\"toggleWildcardsWindow()\" \n              class=\"mt-1 p-3 rounded-lg bg-red-500 hover:bg-red-600 text-xs font-semibold transition-colors duration-300 flex items-center justify-center gap-1 px-6 py-2 text-white\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z\" clip-rule=\"evenodd\"/>\n          </svg>\n          Close\n      </button>\n  </div>\n</div>\n\n    <script>\n        let domains = [];\n        const wildcardsWindow = document.getElementById('wildcards-window');\n        const domainsContainer = document.getElementById('container-domains');\n        \n        async function loadDomains() {\n            try {\n                const response = await fetch('/api/v1/domains');\n                if (response.ok) {\n                    domains = await response.json();\n                    domainsContainer.innerHTML = domains.map((d, i) => \\`<div>\\${i + 1}. \\${d.hostname}</div>\\`).join('');\n                } else {\n                    console.error('Failed to load domains');\n                }\n            } catch (error) {\n                console.error('Error loading domains:', error);\n            }\n        }\n\n        function toggleWildcardsWindow() {\n            if (wildcardsWindow.classList.contains('hidden')) {\n                loadDomains();\n                wildcardsWindow.classList.remove('hidden');\n            } else {\n                wildcardsWindow.classList.add('hidden');\n            }\n        }\n\n        function setLoadingState(isLoading) {\n            const loading = document.getElementById('wildcard-loading');\n            const newDomainInput = document.getElementById('new-domain-input');\n            const addDomainButton = document.getElementById('add-domain-button');\n            const deleteDomainInput = document.getElementById('delete-domain-input');\n            const deleteDomainButton = document.getElementById('delete-domain-button');\n            const progressFill = document.getElementById('popupProgress');\n\n            if (isLoading) {\n                loading.classList.remove('hidden');\n                newDomainInput.disabled = true;\n                addDomainButton.disabled = true;\n                deleteDomainInput.disabled = true;\n                deleteDomainButton.disabled = true;\n                \n                progressFill.style.width = '0%';\n                // Use a timeout to ensure the transition is applied after the initial width is set\n                setTimeout(() => {\n                    progressFill.style.transition = 'width 2s ease-in-out';\n                    progressFill.style.width = '80%';\n                }, 100);\n\n            } else {\n                progressFill.style.width = '100%';\n                setTimeout(() => {\n                    loading.classList.add('hidden');\n                    // Reset for next time\n                    progressFill.style.width = '0%';\n                    progressFill.style.transition = '';\n                }, 500);\n\n                newDomainInput.disabled = false;\n                addDomainButton.disabled = false;\n                deleteDomainInput.disabled = false;\n                deleteDomainButton.disabled = false;\n            }\n        }\n\n        async function registerDomain() {\n            const input = document.getElementById('new-domain-input');\n            const domain = input.value.trim();\n            if (!domain) return;\n\n            setLoadingState(true);\n\n            try {\n                const response = await fetch('/api/v1/domains', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ domain }),\n                });\n                if (response.ok) {\n                    input.value = '';\n                    await loadDomains();\n                } else {\n                    alert('Failed to register domain: ' + await response.text());\n                }\n            } catch (error) {\n                console.error('Error registering domain:', error);\n                alert('An error occurred while registering the domain.');\n            } finally {\n                setLoadingState(false);\n            }\n        }\n\n        async function deleteDomainByNumber() {\n            const numberInput = document.getElementById('delete-domain-input');\n            const passwordInput = document.getElementById('delete-domain-password');\n            const number = parseInt(numberInput.value, 10);\n            const password = passwordInput.value;\n\n            if (isNaN(number) || number < 1 || number > domains.length) {\n                alert('Invalid number');\n                return;\n            }\n\n            const domainToDelete = domains[number - 1];\n            setLoadingState(true);\n\n            try {\n                const response = await fetch('/api/v1/domains', {\n                    method: 'DELETE',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ id: domainToDelete.id, password: password }),\n                });\n\n                if (response.ok) {\n                    numberInput.value = '';\n                    passwordInput.value = '';\n                    await loadDomains();\n                } else {\n                    alert('Failed to delete domain: ' + await response.text());\n                }\n            } catch (error) {\n                console.error('Error deleting domain:', error);\n                alert('An error occurred while deleting the domain.');\n            } finally {\n                setLoadingState(false);\n            }\n        }\n    </script>\n    <script>\n        const updateURL = (params) => {\n          const url = new URL(window.location.href);\n\n          params.forEach(({ key, value }) => {\n            if (key === 'search' && value) {\n              // Reset ke halaman 1 jika parameter pencarian diperbarui\n              url.searchParams.set('page', '1');\n            }\n            if (value) {\n              url.searchParams.set(key, value);\n            } else {\n              url.searchParams.delete(key);\n            }\n          });\n\n          // Redirect ke URL yang telah diperbarui\n          window.location.href = url.toString();\n        };\n\n        function goToHomePage(hostName) {\n          const homeURL = \\`https://\\${hostName}/web\\`;\n          window.location.href = homeURL;\n        }\n        \n        function onWildcardChange(event) {\n          updateURL([{ key: 'wildcard', value: event.target.value }]);\n        }\n\n        function onConfigTypeChange(event) {\n          updateURL([{ key: 'configType', value: event.target.value }]);\n        }\n\n        function copy(text) {\n            navigator.clipboard.writeText(text)\n                .then(() => showToast('Configuration copied successfully! \uD83D\uDE80'))\n                .catch(() => showToast('Failed to copy configuration \u274C', true));\n        }\n\n        function showToast(message, isError = false) {\n            const toast = document.createElement('div');\n            toast.className = 'quantum-toast';\n            toast.textContent = message;\n            if (isError) {\n                toast.style.background = '#ff3366';\n            }\n            document.body.appendChild(toast);\n\n            setTimeout(() => {\n                toast.style.opacity = '0';\n                toast.style.transform = 'translateY(100%)';\n                setTimeout(() => toast.remove(), 300);\n            }, 2000);\n        }\n\n        function executeSearch() {\n          const query = document.getElementById('search-bar').value.trim();\n          if (query) {\n            updateURL([{ key: 'search', value: query }]);\n          } else {\n            alert('Please enter a search term.');\n          }\n        }\n\n        document.getElementById('search-bar').addEventListener('keydown', (event) => {\n          if (event.key === 'Enter') {\n            executeSearch();\n          }\n        });\n\n        document.getElementById('search-button').addEventListener('click', executeSearch);\n    </script>\n</body>\n</html>\n  `, { headers: { 'Content-Type': 'text/html' } });\n}\n\nasync function websockerHandler(request) {\n  const webSocketPair = new WebSocketPair();\n  const [client, webSocket] = Object.values(webSocketPair);\n\n  webSocket.accept();\n\n  let addressLog = \"\";\n  let portLog = \"\";\n  const log = (info, event) => {\n    console.log(`[${addressLog}:${portLog}] ${info}`, event || \"\");\n  };\n  const earlyDataHeader = request.headers.get(\"sec-websocket-protocol\") || \"\";\n\n  const readableWebSocketStream = makeReadableWebSocketStream(webSocket, earlyDataHeader, log);\n\n  let remoteSocketWrapper = {\n    value: null,\n  };\n  let udpStreamWrite = null;\n  let isDNS = false;\n\n  readableWebSocketStream\n    .pipeTo(\n      new WritableStream({\n        async write(chunk, controller) {\n          if (isDNS && udpStreamWrite) {\n            return udpStreamWrite(chunk);\n          }\n          if (remoteSocketWrapper.value) {\n            const writer = remoteSocketWrapper.value.writable.getWriter();\n            await writer.write(chunk);\n            writer.releaseLock();\n            return;\n          }\n\n          const protocol = await protocolSniffer(chunk);\n          let protocolHeader;\n\n          if (protocol === \"Trojan\") {\n            protocolHeader = parseTrojanHeader(chunk);\n          } else if (protocol === \"VLESS\") {\n            protocolHeader = parseVlessHeader(chunk);\n          } else if (protocol === \"Shadowsocks\") {\n            protocolHeader = parseShadowsocksHeader(chunk);\n          } else {\n            parseVmessHeader(chunk);\n            throw new Error(\"Unknown Protocol!\");\n          }\n\n          addressLog = protocolHeader.addressRemote;\n          portLog = `${protocolHeader.portRemote} -> ${protocolHeader.isUDP ? \"UDP\" : \"TCP\"}`;\n\n          if (protocolHeader.hasError) {\n            throw new Error(protocolHeader.message);\n          }\n\n          if (protocolHeader.isUDP) {\n            if (protocolHeader.portRemote === 53) {\n              isDNS = true;\n            } else {\n              throw new Error(\"UDP only support for DNS port 53\");\n            }\n          }\n\n          if (isDNS) {\n            const { write } = await handleUDPOutbound(webSocket, protocolHeader.version, log);\n            udpStreamWrite = write;\n            udpStreamWrite(protocolHeader.rawClientData);\n            return;\n          }\n\n          handleTCPOutBound(\n            remoteSocketWrapper,\n            protocolHeader.addressRemote,\n            protocolHeader.portRemote,\n            protocolHeader.rawClientData,\n            webSocket,\n            protocolHeader.version,\n            log\n          );\n        },\n        close() {\n          log(`readableWebSocketStream is close`);\n        },\n        abort(reason) {\n          log(`readableWebSocketStream is abort`, JSON.stringify(reason));\n        },\n      })\n    )\n    .catch((err) => {\n      log(\"readableWebSocketStream pipeTo error\", err);\n    });\n\n  return new Response(null, {\n    status: 101,\n    webSocket: client,\n  });\n}\n\nasync function protocolSniffer(buffer) {\n  if (buffer.byteLength >= 62) {\n    const trojanDelimiter = new Uint8Array(buffer.slice(56, 60));\n    if (trojanDelimiter[0] === 0x0d && trojanDelimiter[1] === 0x0a) {\n      if (trojanDelimiter[2] === 0x01 || trojanDelimiter[2] === 0x03 || trojanDelimiter[2] === 0x7f) {\n        if (trojanDelimiter[3] === 0x01 || trojanDelimiter[3] === 0x03 || trojanDelimiter[3] === 0x04) {\n          return \"Trojan\";\n        }\n      }\n    }\n  }\n\n  const vlessDelimiter = new Uint8Array(buffer.slice(1, 17));\n  // Hanya mendukung UUID v4\n  if (arrayBufferToHex(vlessDelimiter).match(/^\\w{8}\\w{4}4\\w{3}[89ab]\\w{3}\\w{12}$/)) {\n    return \"VLESS\";\n  }\n\n  return \"Shadowsocks\"; // default\n}\n\nasync function handleTCPOutBound(\n  remoteSocket,\n  addressRemote,\n  portRemote,\n  rawClientData,\n  webSocket,\n  responseHeader,\n  log\n) {\n  async function connectAndWrite(address, port) {\n    const tcpSocket = connect({\n      hostname: address,\n      port: port,\n    });\n    remoteSocket.value = tcpSocket;\n    log(`connected to ${address}:${port}`);\n    const writer = tcpSocket.writable.getWriter();\n    await writer.write(rawClientData);\n    writer.releaseLock();\n    return tcpSocket;\n  }\n\n  async function retry() {\n    const tcpSocket = await connectAndWrite(\n      proxyIP.split(/[:=-]/)[0] || addressRemote,\n      proxyIP.split(/[:=-]/)[1] || portRemote\n    );\n    tcpSocket.closed\n      .catch((error) => {\n        console.log(\"retry tcpSocket closed error\", error);\n      })\n      .finally(() => {\n        safeCloseWebSocket(webSocket);\n      });\n    remoteSocketToWS(tcpSocket, webSocket, responseHeader, null, log);\n  }\n\n  const tcpSocket = await connectAndWrite(addressRemote, portRemote);\n\n  remoteSocketToWS(tcpSocket, webSocket, responseHeader, retry, log);\n}\n\nfunction makeReadableWebSocketStream(webSocketServer, earlyDataHeader, log) {\n  let readableStreamCancel = false;\n  const stream = new ReadableStream({\n    start(controller) {\n      webSocketServer.addEventListener(\"message\", (event) => {\n        if (readableStreamCancel) {\n          return;\n        }\n        const message = event.data;\n        controller.enqueue(message);\n      });\n      webSocketServer.addEventListener(\"close\", () => {\n        safeCloseWebSocket(webSocketServer);\n        if (readableStreamCancel) {\n          return;\n        }\n        controller.close();\n      });\n      webSocketServer.addEventListener(\"error\", (err) => {\n        log(\"webSocketServer has error\");\n        controller.error(err);\n      });\n      const { earlyData, error } = base64ToArrayBuffer(earlyDataHeader);\n      if (error) {\n        controller.error(error);\n      } else if (earlyData) {\n        controller.enqueue(earlyData);\n      }\n    },\n\n    pull(controller) {},\n    cancel(reason) {\n      if (readableStreamCancel) {\n        return;\n      }\n      log(`ReadableStream was canceled, due to ${reason}`);\n      readableStreamCancel = true;\n      safeCloseWebSocket(webSocketServer);\n    },\n  });\n\n  return stream;\n}\n\nfunction parseVmessHeader(vmessBuffer) {\n  // https://xtls.github.io/development/protocols/vmess.html#%E6%8C%87%E4%BB%A4%E9%83%A8%E5%88%86\n}\n\nfunction parseShadowsocksHeader(ssBuffer) {\n  const view = new DataView(ssBuffer);\n\n  const addressType = view.getUint8(0);\n  let addressLength = 0;\n  let addressValueIndex = 1;\n  let addressValue = \"\";\n\n  switch (addressType) {\n    case 1:\n      addressLength = 4;\n      addressValue = new Uint8Array(ssBuffer.slice(addressValueIndex, addressValueIndex + addressLength)).join(\".\");\n      break;\n    case 3:\n      addressLength = new Uint8Array(ssBuffer.slice(addressValueIndex, addressValueIndex + 1))[0];\n      addressValueIndex += 1;\n      addressValue = new TextDecoder().decode(ssBuffer.slice(addressValueIndex, addressValueIndex + addressLength));\n      break;\n    case 4:\n      addressLength = 16;\n      const dataView = new DataView(ssBuffer.slice(addressValueIndex, addressValueIndex + addressLength));\n      const ipv6 = [];\n      for (let i = 0; i < 8; i++) {\n        ipv6.push(dataView.getUint16(i * 2).toString(16));\n      }\n      addressValue = ipv6.join(\":\");\n      break;\n    default:\n      return {\n        hasError: true,\n        message: `Invalid addressType for Shadowsocks: ${addressType}`,\n      };\n  }\n\n  if (!addressValue) {\n    return {\n      hasError: true,\n      message: `Destination address empty, address type is: ${addressType}`,\n    };\n  }\n\n  const portIndex = addressValueIndex + addressLength;\n  const portBuffer = ssBuffer.slice(portIndex, portIndex + 2);\n  const portRemote = new DataView(portBuffer).getUint16(0);\n  return {\n    hasError: false,\n    addressRemote: addressValue,\n    addressType: addressType,\n    portRemote: portRemote,\n    rawDataIndex: portIndex + 2,\n    rawClientData: ssBuffer.slice(portIndex + 2),\n    version: null,\n    isUDP: portRemote == 53,\n  };\n}\n\nfunction parseVlessHeader(vlessBuffer) {\n  const version = new Uint8Array(vlessBuffer.slice(0, 1));\n  let isUDP = false;\n\n  const optLength = new Uint8Array(vlessBuffer.slice(17, 18))[0];\n\n  const cmd = new Uint8Array(vlessBuffer.slice(18 + optLength, 18 + optLength + 1))[0];\n  if (cmd === 1) {\n  } else if (cmd === 2) {\n    isUDP = true;\n  } else {\n    return {\n      hasError: true,\n      message: `command ${cmd} is not support, command 01-tcp,02-udp,03-mux`,\n    };\n  }\n  const portIndex = 18 + optLength + 1;\n  const portBuffer = vlessBuffer.slice(portIndex, portIndex + 2);\n  const portRemote = new DataView(portBuffer).getUint16(0);\n\n  let addressIndex = portIndex + 2;\n  const addressBuffer = new Uint8Array(vlessBuffer.slice(addressIndex, addressIndex + 1));\n\n  const addressType = addressBuffer[0];\n  let addressLength = 0;\n  let addressValueIndex = addressIndex + 1;\n  let addressValue = \"\";\n  switch (addressType) {\n    case 1: // For IPv4\n      addressLength = 4;\n      addressValue = new Uint8Array(vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength)).join(\".\");\n      break;\n    case 2: // For Domain\n      addressLength = new Uint8Array(vlessBuffer.slice(addressValueIndex, addressValueIndex + 1))[0];\n      addressValueIndex += 1;\n      addressValue = new TextDecoder().decode(vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength));\n      break;\n    case 3: // For IPv6\n      addressLength = 16;\n      const dataView = new DataView(vlessBuffer.slice(addressValueIndex, addressValueIndex + addressLength));\n      const ipv6 = [];\n      for (let i = 0; i < 8; i++) {\n        ipv6.push(dataView.getUint16(i * 2).toString(16));\n      }\n      addressValue = ipv6.join(\":\");\n      break;\n    default:\n      return {\n        hasError: true,\n        message: `invild  addressType is ${addressType}`,\n      };\n  }\n  if (!addressValue) {\n    return {\n      hasError: true,\n      message: `addressValue is empty, addressType is ${addressType}`,\n    };\n  }\n\n  return {\n    hasError: false,\n    addressRemote: addressValue,\n    addressType: addressType,\n    portRemote: portRemote,\n    rawDataIndex: addressValueIndex + addressLength,\n    rawClientData: vlessBuffer.slice(addressValueIndex + addressLength),\n    version: new Uint8Array([version[0], 0]),\n    isUDP: isUDP,\n  };\n}\n\nfunction parseTrojanHeader(buffer) {\n  const socks5DataBuffer = buffer.slice(58);\n  if (socks5DataBuffer.byteLength < 6) {\n    return {\n      hasError: true,\n      message: \"invalid SOCKS5 request data\",\n    };\n  }\n\n  let isUDP = false;\n  const view = new DataView(socks5DataBuffer);\n  const cmd = view.getUint8(0);\n  if (cmd == 3) {\n    isUDP = true;\n  } else if (cmd != 1) {\n    throw new Error(\"Unsupported command type!\");\n  }\n\n  let addressType = view.getUint8(1);\n  let addressLength = 0;\n  let addressValueIndex = 2;\n  let addressValue = \"\";\n  switch (addressType) {\n    case 1: // For IPv4\n      addressLength = 4;\n      addressValue = new Uint8Array(socks5DataBuffer.slice(addressValueIndex, addressValueIndex + addressLength)).join(\n        \".\"\n      );\n      break;\n    case 3: // For Domain\n      addressLength = new Uint8Array(socks5DataBuffer.slice(addressValueIndex, addressValueIndex + 1))[0];\n      addressValueIndex += 1;\n      addressValue = new TextDecoder().decode(\n        socks5DataBuffer.slice(addressValueIndex, addressValueIndex + addressLength)\n      );\n      break;\n    case 4: // For IPv6\n      addressLength = 16;\n      const dataView = new DataView(socks5DataBuffer.slice(addressValueIndex, addressValueIndex + addressLength));\n      const ipv6 = [];\n      for (let i = 0; i < 8; i++) {\n        ipv6.push(dataView.getUint16(i * 2).toString(16));\n      }\n      addressValue = ipv6.join(\":\");\n      break;\n    default:\n      return {\n        hasError: true,\n        message: `invalid addressType is ${addressType}`,\n      };\n  }\n\n  if (!addressValue) {\n    return {\n      hasError: true,\n      message: `address is empty, addressType is ${addressType}`,\n    };\n  }\n\n  const portIndex = addressValueIndex + addressLength;\n  const portBuffer = socks5DataBuffer.slice(portIndex, portIndex + 2);\n  const portRemote = new DataView(portBuffer).getUint16(0);\n  return {\n    hasError: false,\n    addressRemote: addressValue,\n    addressType: addressType,\n    portRemote: portRemote,\n    rawDataIndex: portIndex + 4,\n    rawClientData: socks5DataBuffer.slice(portIndex + 4),\n    version: null,\n    isUDP: isUDP,\n  };\n}\n\nasync function remoteSocketToWS(remoteSocket, webSocket, responseHeader, retry, log) {\n  let header = responseHeader;\n  let hasIncomingData = false;\n  await remoteSocket.readable\n    .pipeTo(\n      new WritableStream({\n        start() {},\n        async write(chunk, controller) {\n          hasIncomingData = true;\n          if (webSocket.readyState !== WS_READY_STATE_OPEN) {\n            controller.error(\"webSocket.readyState is not open, maybe close\");\n          }\n          if (header) {\n            webSocket.send(await new Blob([header, chunk]).arrayBuffer());\n            header = null;\n          } else {\n            webSocket.send(chunk);\n          }\n        },\n        close() {\n          log(`remoteConnection!.readable is close with hasIncomingData is ${hasIncomingData}`);\n        },\n        abort(reason) {\n          console.error(`remoteConnection!.readable abort`, reason);\n        },\n      })\n    )\n    .catch((error) => {\n      console.error(`remoteSocketToWS has exception `, error.stack || error);\n      safeCloseWebSocket(webSocket);\n    });\n  if (hasIncomingData === false && retry) {\n    log(`retry`);\n    retry();\n  }\n}\n\nfunction base64ToArrayBuffer(base64Str) {\n  if (!base64Str) {\n    return { error: null };\n  }\n  try {\n    base64Str = base64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const decode = atob(base64Str);\n    const arryBuffer = Uint8Array.from(decode, (c) => c.charCodeAt(0));\n    return { earlyData: arryBuffer.buffer, error: null };\n  } catch (error) {\n    return { error };\n  }\n}\n\nfunction arrayBufferToHex(buffer) {\n  return [...new Uint8Array(buffer)].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\nasync function handleUDPOutbound(webSocket, responseHeader, log) {\n  let isVlessHeaderSent = false;\n  const transformStream = new TransformStream({\n    start(controller) {},\n    transform(chunk, controller) {\n      for (let index = 0; index < chunk.byteLength; ) {\n        const lengthBuffer = chunk.slice(index, index + 2);\n        const udpPakcetLength = new DataView(lengthBuffer).getUint16(0);\n        const udpData = new Uint8Array(chunk.slice(index + 2, index + 2 + udpPakcetLength));\n        index = index + 2 + udpPakcetLength;\n        controller.enqueue(udpData);\n      }\n    },\n    flush(controller) {},\n  });\n  transformStream.readable\n    .pipeTo(\n      new WritableStream({\n        async write(chunk) {\n          const resp = await fetch(\"https://1.1.1.1/dns-query\", {\n            method: \"POST\",\n            headers: {\n              \"content-type\": \"application/dns-message\",\n            },\n            body: chunk,\n          });\n          const dnsQueryResult = await resp.arrayBuffer();\n          const udpSize = dnsQueryResult.byteLength;\n          const udpSizeBuffer = new Uint8Array([(udpSize >> 8) & 0xff, udpSize & 0xff]);\n          if (webSocket.readyState === WS_READY_STATE_OPEN) {\n            log(`doh success and dns message length is ${udpSize}`);\n            if (isVlessHeaderSent) {\n              webSocket.send(await new Blob([udpSizeBuffer, dnsQueryResult]).arrayBuffer());\n            } else {\n              webSocket.send(await new Blob([responseHeader, udpSizeBuffer, dnsQueryResult]).arrayBuffer());\n              isVlessHeaderSent = true;\n            }\n          }\n        },\n      })\n    )\n    .catch((error) => {\n      log(\"dns udp has error\" + error);\n    });\n\n  const writer = transformStream.writable.getWriter();\n\n  return {\n    write(chunk) {\n      writer.write(chunk);\n    },\n  };\n}\n\nfunction safeCloseWebSocket(socket) {\n  try {\n    if (socket.readyState === WS_READY_STATE_OPEN || socket.readyState === WS_READY_STATE_CLOSING) {\n      socket.close();\n    }\n  } catch (error) {\n    console.error(\"safeCloseWebSocket error\", error);\n  }\n}\n// Fungsi untuk mengonversi countryCode menjadi emoji bendera\nconst getEmojiFlag = (countryCode) => {\n  if (!countryCode || countryCode.length !== 2) return ''; // Validasi input\n  return String.fromCodePoint(\n    ...[...countryCode.toUpperCase()].map(char => 0x1F1E6 + char.charCodeAt(0) - 65)\n  );\n};\nasync function generateClashSub(type, bug, bexnxx, tls, country = null, limit = null) {\n  const proxyListResponse = await fetch(proxyListURL);\n  const proxyList = await proxyListResponse.text();\n  let ips = proxyList\n    .split('\\n')\n    .filter(Boolean)\n  if (country && country.toLowerCase() === 'random') {\n    // Pilih data secara acak jika country=random\n    ips = ips.sort(() => Math.random() - 0.5); // Acak daftar proxy\n  } else if (country) {\n    // Filter berdasarkan country jika bukan \"random\"\n    ips = ips.filter(line => {\n      const parts = line.split(',');\n      if (parts.length > 1) {\n        const lineCountry = parts[2].toUpperCase();\n        return lineCountry === country.toUpperCase();\n      }\n      return false;\n    });\n  }\n  \n  if (limit && !isNaN(limit)) {\n    ips = ips.slice(0, limit); // Batasi jumlah proxy berdasarkan limit\n  }\n  \n  let conf = '';\n  let bex = '';\n  let count = 1;\n  \n  for (let line of ips) {\n    const parts = line.split(',');\n    const proxyHost = parts[0];\n    const proxyPort = parts[1] || 443;\n    const emojiFlag = getEmojiFlag(line.split(',')[2]); // Konversi ke emoji bendera\n    const sanitize = (text) => text.replace(/[\\n\\r]+/g, \"\").trim(); // Hapus newline dan spasi ekstra\n    let ispName = sanitize(`${emojiFlag} (${line.split(',')[2]}) ${line.split(',')[3]} ${count ++}`);\n    const UUIDS = `${generateUUIDv4()}`;\n    const ports = tls ? '80' : '443';\n    const snio = tls ? `\\n  servername: ${bexnxx}` : '';\n    const snioo = tls ? `\\n  cipher: auto` : '';\n    if (type === 'vless') {\n      bex += `  - ${ispName}\\n`\n      conf += `\n- name: ${ispName}\n  server: ${bug}\n  port: ${ports}\n  type: vless\n  uuid: ${UUIDS}${snioo}\n  tls: ${tls}\n  udp: true\n  skip-cert-verify: true\n  network: ws${snio}\n  ws-opts:\n    path: /${proxyHost}=${proxyPort}\n    headers:\n      Host: ${bexnxx}`;\n    } else if (type === 'trojan') {\n      bex += `  - ${ispName}\\n`\n      conf += `\n- name: ${ispName}\n  server: ${bug}\n  port: 443\n  type: trojan\n  password: ${UUIDS}\n  udp: true\n  skip-cert-verify: true\n  network: ws\n  sni: ${bexnxx}\n  ws-opts:\n    path: /${proxyHost}=${proxyPort}\n    headers:\n      Host: ${bexnxx}`;\n    } else if (type === 'ss') {\n      bex += `  - ${ispName}\\n`\n      conf += `\n- name: ${ispName}\n  type: ss\n  server: ${bug}\n  port: ${ports}\n  cipher: none\n  password: ${UUIDS}\n  udp: true\n  plugin: v2ray-plugin\n  plugin-opts:\n    mode: websocket\n    tls: ${tls}\n    skip-cert-verify: true\n    host: ${bexnxx}\n    path: /${proxyHost}=${proxyPort}\n    mux: false\n    headers:\n      custom: ${bexnxx}`;\n    } else if (type === 'mix') {\n      bex += `  - ${ispName} vless\\n  - ${ispName} trojan\\n  - ${ispName} ss\\n`;\n      conf += `\n- name: ${ispName} vless\n  server: ${bug}\n  port: ${ports}\n  type: vless\n  uuid: ${UUIDS}\n  cipher: auto\n  tls: ${tls}\n  udp: true\n  skip-cert-verify: true\n  network: ws${snio}\n  ws-opts:\n    path: /${proxyHost}=${proxyPort}\n    headers:\n      Host: ${bexnxx}\n- name: ${ispName} trojan\n  server: ${bug}\n  port: 443\n  type: trojan\n  password: ${UUIDS}\n  udp: true\n  skip-cert-verify: true\n  network: ws\n  sni: ${bexnxx}\n  ws-opts:\n    path: /${proxyHost}=${proxyPort}\n    headers:\n      Host: ${bexnxx}\n- name: ${ispName} ss\n  type: ss\n  server: ${bug}\n  port: ${ports}\n  cipher: none\n  password: ${UUIDS}\n  udp: true\n  plugin: v2ray-plugin\n  plugin-opts:\n    mode: websocket\n    tls: ${tls}\n    skip-cert-verify: true\n    host: ${bexnxx}\n    path: /${proxyHost}=${proxyPort}\n    mux: false\n    headers:\n      custom: ${bexnxx}`;\n    }\n  }\n  return `#### CREATED BY : t.me/FER1DEV ####\n### JOIN https://t.me/fer1dev ###\n\nport: 7890\nsocks-port: 7891\nredir-port: 7892\nmixed-port: 7893\ntproxy-port: 7895\nipv6: false\nmode: rule\nlog-level: silent\nallow-lan: true\nexternal-controller: 0.0.0.0:9090\nsecret: \"\"\nbind-address: \"*\"\nunified-delay: true\nprofile:\n  store-selected: true\n  store-fake-ip: true\ndns:\n  enable: true\n  ipv6: false\n  use-host: true\n  enhanced-mode: fake-ip\n  listen: 0.0.0.0:7874\n  nameserver:\n    - 8.8.8.8\n    - 1.0.0.1\n    - https://dns.google/dns-query\n  fallback:\n    - 1.1.1.1\n    - 8.8.4.4\n    - https://cloudflare-dns.com/dns-query\n    - 112.215.203.254\n  default-nameserver:\n    - 8.8.8.8\n    - 1.1.1.1\n    - 112.215.203.254\n  fake-ip-range: 198.18.0.1/16\n  fake-ip-filter:\n    - \"*.lan\"\n    - \"*.localdomain\"\n    - \"*.example\"\n    - \"*.invalid\"\n    - \"*.localhost\"\n    - \"*.test\"\n    - \"*.local\"\n    - \"*.home.arpa\"\n    - time.*.com\n    - time.*.gov\n    - time.*.edu.cn\n    - time.*.apple.com\n    - time1.*.com\n    - time2.*.com\n    - time3.*.com\n    - time4.*.com\n    - time5.*.com\n    - time6.*.com\n    - time7.*.com\n    - ntp.*.com\n    - ntp1.*.com\n    - ntp2.*.com\n    - ntp3.*.com\n    - ntp4.*.com\n    - ntp5.*.com\n    - ntp6.*.com\n    - ntp7.*.com\n    - \"*.time.edu.cn\"\n    - \"*.ntp.org.cn\"\n    - +.pool.ntp.org\n    - time1.cloud.tencent.com\n    - music.163.com\n    - \"*.music.163.com\"\n    - \"*.126.net\"\n    - musicapi.taihe.com\n    - music.taihe.com\n    - songsearch.kugou.com\n    - trackercdn.kugou.com\n    - \"*.kuwo.cn\"\n    - api-jooxtt.sanook.com\n    - api.joox.com\n    - joox.com\n    - y.qq.com\n    - \"*.y.qq.com\"\n    - streamoc.music.tc.qq.com\n    - mobileoc.music.tc.qq.com\n    - isure.stream.qqmusic.qq.com\n    - dl.stream.qqmusic.qq.com\n    - aqqmusic.tc.qq.com\n    - amobile.music.tc.qq.com\n    - \"*.xiami.com\"\n    - \"*.music.migu.cn\"\n    - music.migu.cn\n    - \"*.msftconnecttest.com\"\n    - \"*.msftncsi.com\"\n    - msftconnecttest.com\n    - msftncsi.com\n    - localhost.ptlogin2.qq.com\n    - localhost.sec.qq.com\n    - +.srv.nintendo.net\n    - +.stun.playstation.net\n    - xbox.*.microsoft.com\n    - xnotify.xboxlive.com\n    - +.battlenet.com.cn\n    - +.wotgame.cn\n    - +.wggames.cn\n    - +.wowsgame.cn\n    - +.wargaming.net\n    - proxy.golang.org\n    - stun.*.*\n    - stun.*.*.*\n    - +.stun.*.*\n    - +.stun.*.*.*\n    - +.stun.*.*.*.*\n    - heartbeat.belkin.com\n    - \"*.linksys.com\"\n    - \"*.linksyssmartwifi.com\"\n    - \"*.router.asus.com\"\n    - mesu.apple.com\n    - swscan.apple.com\n    - swquery.apple.com\n    - swdownload.apple.com\n    - swcdn.apple.com\n    - swdist.apple.com\n    - lens.l.google.com\n    - stun.l.google.com\n    - +.nflxvideo.net\n    - \"*.square-enix.com\"\n    - \"*.finalfantasyxiv.com\"\n    - \"*.ffxiv.com\"\n    - \"*.mcdn.bilivideo.cn\"\n    - +.media.dssott.com\nproxies:${conf}\nproxy-groups:\n- name: INTERNET\n  type: select\n  disable-udp: true\n  proxies:\n  - BEST-PING\n${bex}- name: ADS\n  type: select\n  disable-udp: false\n  proxies:\n  - REJECT\n  - INTERNET\n- name: BEST-PING\n  type: url-test\n  url: https://detectportal.firefox.com/success.txt\n  interval: 60\n  proxies:\n${bex}rule-providers:\n  rule_hijacking:\n    type: file\n    behavior: classical\n    path: \"./rule_provider/rule_hijacking.yaml\"\n    url: https://raw.githubusercontent.com/Nizwara/open_clash/main/rule_provider/rule_hijacking.yaml\n  rule_privacy:\n    type: file\n    behavior: classical\n    url: https://raw.githubusercontent.com/Nizwara/open_clash/main/rule_provider/rule_privacy.yaml\n    path: \"./rule_provider/rule_privacy.yaml\"\n  rule_basicads:\n    type: file\n    behavior: domain\n    url: https://raw.githubusercontent.com/Nizwara/open_clash/main/rule_provider/rule_basicads.yaml\n    path: \"./rule_provider/rule_basicads.yaml\"\n  rule_personalads:\n    type: file\n    behavior: classical\n    url: https://raw.githubusercontent.com/Nizwara/open_clash/main/rule_provider/rule_personalads.yaml\n    path: \"./rule_provider/rule_personalads.yaml\"\nrules:\n- IP-CIDR,198.18.0.1/16,REJECT,no-resolve\n- RULE-SET,rule_personalads,ADS\n- RULE-SET,rule_basicads,ADS\n- RULE-SET,rule_hijacking,ADS\n- RULE-SET,rule_privacy,ADS\n- MATCH,INTERNET`;\n}\nasync function generateSurfboardSub(type, bug, bexnxx, tls, country = null, limit = null) {\n  const proxyListResponse = await fetch(proxyListURL);\n  const proxyList = await proxyListResponse.text();\n  let ips = proxyList\n    .split('\\n')\n    .filter(Boolean)\n  if (country && country.toLowerCase() === 'random') {\n    // Pilih data secara acak jika country=random\n    ips = ips.sort(() => Math.random() - 0.5); // Acak daftar proxy\n  } else if (country) {\n    // Filter berdasarkan country jika bukan \"random\"\n    ips = ips.filter(line => {\n      const parts = line.split(',');\n      if (parts.length > 1) {\n        const lineCountry = parts[2].toUpperCase();\n        return lineCountry === country.toUpperCase();\n      }\n      return false;\n    });\n  }\n  if (limit && !isNaN(limit)) {\n    ips = ips.slice(0, limit); // Batasi jumlah proxy berdasarkan limit\n  }\n  let conf = '';\n  let bex = '';\n  let count = 1;\n  \n  for (let line of ips) {\n    const parts = line.split(',');\n    const proxyHost = parts[0];\n    const proxyPort = parts[1] || 443;\n    const emojiFlag = getEmojiFlag(line.split(',')[2]); // Konversi ke emoji bendera\n    const sanitize = (text) => text.replace(/[\\n\\r]+/g, \"\").trim(); // Hapus newline dan spasi ekstra\n    let ispName = sanitize(`${emojiFlag} (${line.split(',')[2]}) ${line.split(',')[3]} ${count ++}`);\n    const UUIDS = `${generateUUIDv4()}`;\n    if (type === 'trojan') {\n      bex += `${ispName},`\n      conf += `\n${ispName} = trojan, ${bug}, 443, password = ${UUIDS}, udp-relay = true, skip-cert-verify = true, sni = ${bexnxx}, ws = true, ws-path = /${proxyHost}:${proxyPort}, ws-headers = Host:\"${bexnxx}\"\\n`;\n    }\n  }\n  return `#### CREATED BY : t.me/FER1DEV ####\n### JOIN https://t.me/FER1DEV ###\n\n[General]\ndns-server = system, 108.137.44.39, 108.137.44.9, puredns.org:853\n\n[Proxy]\n${conf}\n\n[Proxy Group]\nSelect Group = select,Load Balance,Best Ping,FallbackGroup,${bex}\nLoad Balance = load-balance,${bex}\nBest Ping = url-test,${bex} url=http://www.gstatic.com/generate_204, interval=600, tolerance=100, timeout=5\nFallbackGroup = fallback,${bex} url=http://www.gstatic.com/generate_204, interval=600, timeout=5\nAdBlock = select,REJECT,Select Group\n\n[Rule]\nMATCH,Select Group\nDOMAIN-SUFFIX,pagead2.googlesyndication.com, AdBlock\nDOMAIN-SUFFIX,pagead2.googleadservices.com, AdBlock\nDOMAIN-SUFFIX,afs.googlesyndication.com, AdBlock\nDOMAIN-SUFFIX,ads.google.com, AdBlock\nDOMAIN-SUFFIX,adservice.google.com, AdBlock\nDOMAIN-SUFFIX,googleadservices.com, AdBlock\nDOMAIN-SUFFIX,static.media.net, AdBlock\nDOMAIN-SUFFIX,media.net, AdBlock\nDOMAIN-SUFFIX,adservetx.media.net, AdBlock\nDOMAIN-SUFFIX,mediavisor.doubleclick.net, AdBlock\nDOMAIN-SUFFIX,m.doubleclick.net, AdBlock\nDOMAIN-SUFFIX,static.doubleclick.net, AdBlock\nDOMAIN-SUFFIX,doubleclick.net, AdBlock\nDOMAIN-SUFFIX,ad.doubleclick.net, AdBlock\nDOMAIN-SUFFIX,fastclick.com, AdBlock\nDOMAIN-SUFFIX,fastclick.net, AdBlock\nDOMAIN-SUFFIX,media.fastclick.net, AdBlock\nDOMAIN-SUFFIX,cdn.fastclick.net, AdBlock\nDOMAIN-SUFFIX,adtago.s3.amazonaws.com, AdBlock\nDOMAIN-SUFFIX,analyticsengine.s3.amazonaws.com, AdBlock\nDOMAIN-SUFFIX,advice-ads.s3.amazonaws.com, AdBlock\nDOMAIN-SUFFIX,affiliationjs.s3.amazonaws.com, AdBlock\nDOMAIN-SUFFIX,advertising-api-eu.amazon.com, AdBlock\nDOMAIN-SUFFIX,amazonclix.com, AdBlock, AdBlock\nDOMAIN-SUFFIX,assoc-amazon.com, AdBlock\nDOMAIN-SUFFIX,ads.yahoo.com, AdBlock\nDOMAIN-SUFFIX,adserver.yahoo.com, AdBlock\nDOMAIN-SUFFIX,global.adserver.yahoo.com, AdBlock\nDOMAIN-SUFFIX,us.adserver.yahoo.com, AdBlock\nDOMAIN-SUFFIX,adspecs.yahoo.com, AdBlock\nDOMAIN-SUFFIX,br.adspecs.yahoo.com, AdBlock\nDOMAIN-SUFFIX,latam.adspecs.yahoo.com, AdBlock\nDOMAIN-SUFFIX,ush.adspecs.yahoo.com, AdBlock\nDOMAIN-SUFFIX,advertising.yahoo.com, AdBlock\nDOMAIN-SUFFIX,de.advertising.yahoo.com, AdBlock\nDOMAIN-SUFFIX,es.advertising.yahoo.com, AdBlock\nDOMAIN-SUFFIX,fr.advertising.yahoo.com, AdBlock\nDOMAIN-SUFFIX,in.advertising.yahoo.com, AdBlock\nDOMAIN-SUFFIX,it.advertising.yahoo.com, AdBlock\nDOMAIN-SUFFIX,sea.advertising.yahoo.com, AdBlock\nDOMAIN-SUFFIX,uk.advertising.yahoo.com, AdBlock\nDOMAIN-SUFFIX,analytics.yahoo.com, AdBlock\nDOMAIN-SUFFIX,cms.analytics.yahoo.com, AdBlock\nDOMAIN-SUFFIX,opus.analytics.yahoo.com, AdBlock\nDOMAIN-SUFFIX,sp.analytics.yahoo.com, AdBlock\nDOMAIN-SUFFIX,comet.yahoo.com, AdBlock\nDOMAIN-SUFFIX,log.fc.yahoo.com, AdBlock\nDOMAIN-SUFFIX,ganon.yahoo.com, AdBlock\nDOMAIN-SUFFIX,gemini.yahoo.com, AdBlock\nDOMAIN-SUFFIX,beap.gemini.yahoo.com, AdBlock\nDOMAIN-SUFFIX,geo.yahoo.com, AdBlock\nDOMAIN-SUFFIX,marketingsolutions.yahoo.com, AdBlock\nDOMAIN-SUFFIX,pclick.yahoo.com, AdBlock\nDOMAIN-SUFFIX,analytics.query.yahoo.com, AdBlock\nDOMAIN-SUFFIX,geo.query.yahoo.com, AdBlock\nDOMAIN-SUFFIX,onepush.query.yahoo.com, AdBlock\nDOMAIN-SUFFIX,bats.video.yahoo.com, AdBlock\nDOMAIN-SUFFIX,visit.webhosting.yahoo.com, AdBlock\nDOMAIN-SUFFIX,ads.yap.yahoo.com, AdBlock\nDOMAIN-SUFFIX,m.yap.yahoo.com, AdBlock\nDOMAIN-SUFFIX,partnerads.ysm.yahoo.com, AdBlock\nDOMAIN-SUFFIX,appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,redirect.appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,19534.redirect.appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,3.redirect.appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,30488.redirect.appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,4.redirect.appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,report.appmetrica.yandex.net, AdBlock\nDOMAIN-SUFFIX,extmaps-api.yandex.net, AdBlock\nDOMAIN-SUFFIX,analytics.mobile.yandex.net, AdBlock\nDOMAIN-SUFFIX,banners.mobile.yandex.net, AdBlock\nDOMAIN-SUFFIX,banners-slb.mobile.yandex.net, AdBlock\nDOMAIN-SUFFIX,startup.mobile.yandex.net, AdBlock\nDOMAIN-SUFFIX,offerwall.yandex.net, AdBlock\nDOMAIN-SUFFIX,adfox.yandex.ru, AdBlock\nDOMAIN-SUFFIX,matchid.adfox.yandex.ru, AdBlock\nDOMAIN-SUFFIX,adsdk.yandex.ru, AdBlock\nDOMAIN-SUFFIX,an.yandex.ru, AdBlock\nDOMAIN-SUFFIX,redirect.appmetrica.yandex.ru, AdBlock\nDOMAIN-SUFFIX,awaps.yandex.ru, AdBlock\nDOMAIN-SUFFIX,awsync.yandex.ru, AdBlock\nDOMAIN-SUFFIX,bs.yandex.ru, AdBlock\nDOMAIN-SUFFIX,bs-meta.yandex.ru, AdBlock\nDOMAIN-SUFFIX,clck.yandex.ru, AdBlock\nDOMAIN-SUFFIX,informer.yandex.ru, AdBlock\nDOMAIN-SUFFIX,kiks.yandex.ru, AdBlock\nDOMAIN-SUFFIX,grade.market.yandex.ru, AdBlock\nDOMAIN-SUFFIX,mc.yandex.ru, AdBlock\nDOMAIN-SUFFIX,metrika.yandex.ru, AdBlock\nDOMAIN-SUFFIX,click.sender.yandex.ru, AdBlock\nDOMAIN-SUFFIX,share.yandex.ru, AdBlock\nDOMAIN-SUFFIX,yandexadexchange.net, AdBlock\nDOMAIN-SUFFIX,mobile.yandexadexchange.net, AdBlock\nDOMAIN-SUFFIX,google-analytics.com, AdBlock\nDOMAIN-SUFFIX,ssl.google-analytics.com, AdBlock\nDOMAIN-SUFFIX,api-hotjar.com, AdBlock\nDOMAIN-SUFFIX,hotjar-analytics.com, AdBlock\nDOMAIN-SUFFIX,hotjar.com, AdBlock\nDOMAIN-SUFFIX,static.hotjar.com, AdBlock\nDOMAIN-SUFFIX,mouseflow.com, AdBlock\nDOMAIN-SUFFIX,a.mouseflow.com, AdBlock\nDOMAIN-SUFFIX,freshmarketer.com, AdBlock\nDOMAIN-SUFFIX,luckyorange.com, AdBlock\nDOMAIN-SUFFIX,luckyorange.net, AdBlock\nDOMAIN-SUFFIX,cdn.luckyorange.com, AdBlock\nDOMAIN-SUFFIX,w1.luckyorange.com, AdBlock\nDOMAIN-SUFFIX,upload.luckyorange.net, AdBlock\nDOMAIN-SUFFIX,cs.luckyorange.net, AdBlock\nDOMAIN-SUFFIX,settings.luckyorange.net, AdBlock\nDOMAIN-SUFFIX,stats.wp.com, AdBlock\nDOMAIN-SUFFIX,notify.bugsnag.com, AdBlock\nDOMAIN-SUFFIX,sessions.bugsnag.com, AdBlock\nDOMAIN-SUFFIX,api.bugsnag.com, AdBlock\nDOMAIN-SUFFIX,app.bugsnag.com, AdBlock\nDOMAIN-SUFFIX,browser.sentry-cdn.com, AdBlock\nDOMAIN-SUFFIX,app.getsentry.com, AdBlock\nDOMAIN-SUFFIX,pixel.facebook.com, AdBlock\nDOMAIN-SUFFIX,analytics.facebook.com, AdBlock\nDOMAIN-SUFFIX,ads.facebook.com, AdBlock\nDOMAIN-SUFFIX,an.facebook.com, AdBlock\nDOMAIN-SUFFIX,ads-api.twitter.com, AdBlock\nDOMAIN-SUFFIX,advertising.twitter.com, AdBlock\nDOMAIN-SUFFIX,ads-twitter.com, AdBlock\nDOMAIN-SUFFIX,static.ads-twitter.com, AdBlock\nDOMAIN-SUFFIX,ads.linkedin.com, AdBlock\nDOMAIN-SUFFIX,analytics.pointdrive.linkedin.com, AdBlock\nDOMAIN-SUFFIX,ads.pinterest.com, AdBlock\nDOMAIN-SUFFIX,log.pinterest.com, AdBlock\nDOMAIN-SUFFIX,ads-dev.pinterest.com, AdBlock\nDOMAIN-SUFFIX,analytics.pinterest.com, AdBlock\nDOMAIN-SUFFIX,trk.pinterest.com, AdBlock\nDOMAIN-SUFFIX,trk2.pinterest.com, AdBlock\nDOMAIN-SUFFIX,widgets.pinterest.com, AdBlock\nDOMAIN-SUFFIX,ads.reddit.com, AdBlock\nDOMAIN-SUFFIX,rereddit.com, AdBlock\nDOMAIN-SUFFIX,events.redditmedia.com, AdBlock\nDOMAIN-SUFFIX,d.reddit.com, AdBlock\nDOMAIN-SUFFIX,ads-sg.tiktok.com, AdBlock\nDOMAIN-SUFFIX,analytics-sg.tiktok.com, AdBlock\nDOMAIN-SUFFIX,ads.tiktok.com, AdBlock\nDOMAIN-SUFFIX,analytics.tiktok.com, AdBlock\nDOMAIN-SUFFIX,ads.youtube.com, AdBlock\nDOMAIN-SUFFIX,youtube.cleverads.vn, AdBlock\nDOMAIN-SUFFIX,ads.yahoo.com, AdBlock\nDOMAIN-SUFFIX,adserver.yahoo.com, AdBlock\nDOMAIN-SUFFIX,global.adserver.yahoo.com, AdBlock\nDOMAIN-SUFFIX,us.adserver.yahoo.com, AdBlock\nDOMAIN-SUFFIX,adspecs.yahoo.com, AdBlock\nDOMAIN-SUFFIX,advertising.yahoo.com, AdBlock\nDOMAIN-SUFFIX,analytics.yahoo.com, AdBlock\nDOMAIN-SUFFIX,analytics.query.yahoo.com, AdBlock\nDOMAIN-SUFFIX,ads.yap.yahoo.com, AdBlock\nDOMAIN-SUFFIX,m.yap.yahoo.com, AdBlock\nDOMAIN-SUFFIX,partnerads.ysm.yahoo.com, AdBlock\nDOMAIN-SUFFIX,appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,redirect.appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,19534.redirect.appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,3.redirect.appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,30488.redirect.appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,4.redirect.appmetrica.yandex.com, AdBlock\nDOMAIN-SUFFIX,report.appmetrica.yandex.net, AdBlock\nDOMAIN-SUFFIX,extmaps-api.yandex.net, AdBlock\nDOMAIN-SUFFIX,analytics.mobile.yandex.net, AdBlock\nDOMAIN-SUFFIX,banners.mobile.yandex.net, AdBlock\nDOMAIN-SUFFIX,banners-slb.mobile.yandex.net, AdBlock\nDOMAIN-SUFFIX,startup.mobile.yandex.net, AdBlock\nDOMAIN-SUFFIX,offerwall.yandex.net, AdBlock\nDOMAIN-SUFFIX,adfox.yandex.ru, AdBlock\nDOMAIN-SUFFIX,matchid.adfox.yandex.ru, AdBlock\nDOMAIN-SUFFIX,adsdk.yandex.ru, AdBlock\nDOMAIN-SUFFIX,an.yandex.ru, AdBlock\nDOMAIN-SUFFIX,redirect.appmetrica.yandex.ru, AdBlock\nDOMAIN-SUFFIX,awaps.yandex.ru, AdBlock\nDOMAIN-SUFFIX,awsync.yandex.ru, AdBlock\nDOMAIN-SUFFIX,bs.yandex.ru, AdBlock\nDOMAIN-SUFFIX,bs-meta.yandex.ru, AdBlock\nDOMAIN-SUFFIX,clck.yandex.ru, AdBlock\nDOMAIN-SUFFIX,informer.yandex.ru, AdBlock\nDOMAIN-SUFFIX,kiks.yandex.ru, AdBlock\nDOMAIN-SUFFIX,grade.market.yandex.ru, AdBlock\nDOMAIN-SUFFIX,mc.yandex.ru, AdBlock\nDOMAIN-SUFFIX,metrika.yandex.ru, AdBlock\nDOMAIN-SUFFIX,click.sender.yandex.ru, AdBlock\nDOMAIN-SUFFIX,share.yandex.ru, AdBlock\nDOMAIN-SUFFIX,yandexadexchange.net, AdBlock\nDOMAIN-SUFFIX,mobile.yandexadexchange.net, AdBlock\nDOMAIN-SUFFIX,bdapi-in-ads.realmemobile.com, AdBlock\nDOMAIN-SUFFIX,adsfs.oppomobile.com, AdBlock\nDOMAIN-SUFFIX,adx.ads.oppomobile.com, AdBlock\nDOMAIN-SUFFIX,bdapi.ads.oppomobile.com, AdBlock\nDOMAIN-SUFFIX,ck.ads.oppomobile.com, AdBlock\nDOMAIN-SUFFIX,data.ads.oppomobile.com, AdBlock\nDOMAIN-SUFFIX,g1.ads.oppomobile.com, AdBlock\nDOMAIN-SUFFIX,api.ad.xiaomi.com, AdBlock\nDOMAIN-SUFFIX,app.chat.xiaomi.net, AdBlock\nDOMAIN-SUFFIX,data.mistat.xiaomi.com, AdBlock\nDOMAIN-SUFFIX,data.mistat.intl.xiaomi.com, AdBlock\nDOMAIN-SUFFIX,data.mistat.india.xiaomi.com, AdBlock\nDOMAIN-SUFFIX,data.mistat.rus.xiaomi.com, AdBlock\nDOMAIN-SUFFIX,sdkconfig.ad.xiaomi.com, AdBlock\nDOMAIN-SUFFIX,sdkconfig.ad.intl.xiaomi.com, AdBlock\nDOMAIN-SUFFIX,globalapi.ad.xiaomi.com, AdBlock\nDOMAIN-SUFFIX,www.cdn.ad.xiaomi.com, AdBlock\nDOMAIN-SUFFIX,tracking.miui.com, AdBlock\nDOMAIN-SUFFIX,sa.api.intl.miui.com, AdBlock\nDOMAIN-SUFFIX,tracking.miui.com, AdBlock\nDOMAIN-SUFFIX,tracking.intl.miui.com, AdBlock\nDOMAIN-SUFFIX,tracking.india.miui.com, AdBlock\nDOMAIN-SUFFIX,tracking.rus.miui.com, AdBlock\nDOMAIN-SUFFIX,analytics.oneplus.cn, AdBlock\nDOMAIN-SUFFIX,click.oneplus.cn, AdBlock\nDOMAIN-SUFFIX,click.oneplus.com, AdBlock\nDOMAIN-SUFFIX,open.oneplus.net, AdBlock\nDOMAIN-SUFFIX,metrics.data.hicloud.com, AdBlock\nDOMAIN-SUFFIX,metrics1.data.hicloud.com, AdBlock\nDOMAIN-SUFFIX,metrics2.data.hicloud.com, AdBlock\nDOMAIN-SUFFIX,metrics3.data.hicloud.com, AdBlock\nDOMAIN-SUFFIX,metrics4.data.hicloud.com, AdBlock\nDOMAIN-SUFFIX,metrics5.data.hicloud.com, AdBlock\nDOMAIN-SUFFIX,logservice.hicloud.com, AdBlock\nDOMAIN-SUFFIX,logservice1.hicloud.com, AdBlock\nDOMAIN-SUFFIX,metrics-dra.dt.hicloud.com, AdBlock\nDOMAIN-SUFFIX,logbak.hicloud.com, AdBlock\nDOMAIN-SUFFIX,ad.samsungadhub.com, AdBlock\nDOMAIN-SUFFIX,samsungadhub.com, AdBlock\nDOMAIN-SUFFIX,samsungads.com, AdBlock\nDOMAIN-SUFFIX,smetrics.samsung.com, AdBlock\nDOMAIN-SUFFIX,nmetrics.samsung.com, AdBlock\nDOMAIN-SUFFIX,samsung-com.112.2o7.net, AdBlock\nDOMAIN-SUFFIX,business.samsungusa.com, AdBlock\nDOMAIN-SUFFIX,analytics.samsungknox.com, AdBlock\nDOMAIN-SUFFIX,bigdata.ssp.samsung.com, AdBlock\nDOMAIN-SUFFIX,analytics-api.samsunghealthcn.com, AdBlock\nDOMAIN-SUFFIX,config.samsungads.com, AdBlock\nDOMAIN-SUFFIX,metrics.apple.com, AdBlock\nDOMAIN-SUFFIX,securemetrics.apple.com, AdBlock\nDOMAIN-SUFFIX,supportmetrics.apple.com, AdBlock\nDOMAIN-SUFFIX,metrics.icloud.com, AdBlock\nDOMAIN-SUFFIX,metrics.mzstatic.com, AdBlock\nDOMAIN-SUFFIX,dzc-metrics.mzstatic.com, AdBlock\nDOMAIN-SUFFIX,books-analytics-events.news.apple-dns.net, AdBlock\nDOMAIN-SUFFIX,books-analytics-events.apple.com, AdBlock\nDOMAIN-SUFFIX,stocks-analytics-events.apple.com, AdBlock\nDOMAIN-SUFFIX,stocks-analytics-events.news.apple-dns.net, AdBlock\nDOMAIN-KEYWORD,pagead2, AdBlock\nDOMAIN-KEYWORD,adservice, AdBlock\nDOMAIN-KEYWORD,.ads, AdBlock\nDOMAIN-KEYWORD,.ad, AdBlock\nDOMAIN-KEYWORD,adservetx, AdBlock\nDOMAIN-KEYWORD,mediavisor, AdBlock\nDOMAIN-KEYWORD,adtago, AdBlock\nDOMAIN-KEYWORD,analyticsengine, AdBlock\nDOMAIN-KEYWORD,advice-ads, AdBlock\nDOMAIN-KEYWORD,affiliationjs, AdBlock\nDOMAIN-KEYWORD,advertising, AdBlock\nDOMAIN-KEYWORD,adserver, AdBlock\nDOMAIN-KEYWORD,pclick, AdBlock\nDOMAIN-KEYWORD,partnerads, AdBlock\nDOMAIN-KEYWORD,appmetrica, AdBlock\nDOMAIN-KEYWORD,adfox, AdBlock\nDOMAIN-KEYWORD,adsdk, AdBlock\nDOMAIN-KEYWORD,clck, AdBlock\nDOMAIN-KEYWORD,metrika, AdBlock\nDOMAIN-KEYWORD,api-hotjar, AdBlock\nDOMAIN-KEYWORD,hotjar-analytics, AdBlock\nDOMAIN-KEYWORD,hotjar, AdBlock\nDOMAIN-KEYWORD,luckyorange, AdBlock\nDOMAIN-KEYWORD,bugsnag, AdBlock\nDOMAIN-KEYWORD,sentry-cdn, AdBlock\nDOMAIN-KEYWORD,getsentry, AdBlock\nDOMAIN-KEYWORD,ads-api, AdBlock\nDOMAIN-KEYWORD,ads-twitter, AdBlock\nDOMAIN-KEYWORD,pointdrive, AdBlock\nDOMAIN-KEYWORD,ads-dev, AdBlock\nDOMAIN-KEYWORD,trk, AdBlock\nDOMAIN-KEYWORD,cleverads, AdBlock\nDOMAIN-KEYWORD,ads-sg, AdBlock\nDOMAIN-KEYWORD,analytics-sg, AdBlock\nDOMAIN-KEYWORD,adspecs, AdBlock\nDOMAIN-KEYWORD,adsfs, AdBlock\nDOMAIN-KEYWORD,adx, AdBlock\nDOMAIN-KEYWORD,tracking, AdBlock\nDOMAIN-KEYWORD,logservice, AdBlock\nDOMAIN-KEYWORD,logbak, AdBlock\nDOMAIN-KEYWORD,smetrics, AdBlock\nDOMAIN-KEYWORD,nmetrics, AdBlock\nDOMAIN-KEYWORD,securemetrics, AdBlock\nDOMAIN-KEYWORD,supportmetrics, AdBlock\nDOMAIN-KEYWORD,books-analytics, AdBlock\nDOMAIN-KEYWORD,stocks-analytics, AdBlock\nDOMAIN-SUFFIX,analytics.s3.amazonaws.com, AdBlock\nDOMAIN-SUFFIX,analytics.google.com, AdBlock\nDOMAIN-SUFFIX,click.googleanalytics.com, AdBlock\nDOMAIN-SUFFIX,events.reddit.com, AdBlock\nDOMAIN-SUFFIX,business-api.tiktok.com, AdBlock\nDOMAIN-SUFFIX,log.byteoversea.com, AdBlock\nDOMAIN-SUFFIX,udc.yahoo.com, AdBlock\nDOMAIN-SUFFIX,udcm.yahoo.com, AdBlock\nDOMAIN-SUFFIX,auction.unityads.unity3d.com, AdBlock\nDOMAIN-SUFFIX,webview.unityads.unity3d.com, AdBlock\nDOMAIN-SUFFIX,config.unityads.unity3d.com, AdBlock\nDOMAIN-SUFFIX,adfstat.yandex.ru, AdBlock\nDOMAIN-SUFFIX,iot-eu-logser.realme.com, AdBlock\nDOMAIN-SUFFIX,iot-logser.realme.com, AdBlock\nDOMAIN-SUFFIX,bdapi-ads.realmemobile.com, AdBlock\nDOMAIN-SUFFIX,grs.hicloud.com, AdBlock\nDOMAIN-SUFFIX,weather-analytics-events.apple.com, AdBlock\nDOMAIN-SUFFIX,notes-analytics-events.apple.com, AdBlock\nFINAL,Select Group`;\n}\nasync function generateHusiSub(type, bug, bexnxx, tls, country = null, limit = null) {\n  const proxyListResponse = await fetch(proxyListURL);\n  const proxyList = await proxyListResponse.text();\n  let ips = proxyList\n    .split('\\n')\n    .filter(Boolean)\n  if (country && country.toLowerCase() === 'random') {\n    // Pilih data secara acak jika country=random\n    ips = ips.sort(() => Math.random() - 0.5); // Acak daftar proxy\n  } else if (country) {\n    // Filter berdasarkan country jika bukan \"random\"\n    ips = ips.filter(line => {\n      const parts = line.split(',');\n      if (parts.length > 1) {\n        const lineCountry = parts[2].toUpperCase();\n        return lineCountry === country.toUpperCase();\n      }\n      return false;\n    });\n  }\n  if (limit && !isNaN(limit)) {\n    ips = ips.slice(0, limit); // Batasi jumlah proxy berdasarkan limit\n  }\n  let conf = '';\n  let bex = '';\n  let count = 1;\n  \n  for (let line of ips) {\n    const parts = line.split(',');\n    const proxyHost = parts[0];\n    const proxyPort = parts[1] || 443;\n    const emojiFlag = getEmojiFlag(line.split(',')[2]); // Konversi ke emoji bendera\n    const sanitize = (text) => text.replace(/[\\n\\r]+/g, \"\").trim(); // Hapus newline dan spasi ekstra\n    let ispName = sanitize(`${emojiFlag} (${line.split(',')[2]}) ${line.split(',')[3]} ${count ++}`);\n    const UUIDS = `${generateUUIDv4()}`;\n    const ports = tls ? '80' : '443';\n    const snio = tls ? `\\n      \"tls\": {\\n        \"disable_sni\": false,\\n        \"enabled\": true,\\n        \"insecure\": true,\\n        \"server_name\": \"${bexnxx}\"\\n      },` : '';\n    if (type === 'vless') {\n      bex += `        \"${ispName}\",\\n`\n      conf += `\n    {\n      \"domain_strategy\": \"ipv4_only\",\n      \"flow\": \"\",\n      \"multiplex\": {\n        \"enabled\": false,\n        \"max_streams\": 32,\n        \"protocol\": \"smux\"\n      },\n      \"packet_encoding\": \"xudp\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"tag\": \"${ispName}\",${snio}\n      \"transport\": {\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"max_early_data\": 0,\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"type\": \"ws\"\n      },\n      \"type\": \"vless\",\n      \"uuid\": \"${UUIDS}\"\n    },`;\n    } else if (type === 'trojan') {\n      bex += `        \"${ispName}\",\\n`\n      conf += `\n    {\n      \"domain_strategy\": \"ipv4_only\",\n      \"multiplex\": {\n        \"enabled\": false,\n        \"max_streams\": 32,\n        \"protocol\": \"smux\"\n      },\n      \"password\": \"${UUIDS}\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"tag\": \"${ispName}\",${snio}\n      \"transport\": {\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"max_early_data\": 0,\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"type\": \"ws\"\n      },\n      \"type\": \"trojan\"\n    },`;\n    } else if (type === 'ss') {\n      bex += `        \"${ispName}\",\\n`\n      conf += `\n    {\n      \"type\": \"shadowsocks\",\n      \"tag\": \"${ispName}\",\n      \"server\": \"${bug}\",\n      \"server_port\": 443,\n      \"method\": \"none\",\n      \"password\": \"${UUIDS}\",\n      \"plugin\": \"v2ray-plugin\",\n      \"plugin_opts\": \"mux=0;path=/${proxyHost}=${proxyPort};host=${bexnxx};tls=1\"\n    },`;\n    } else if (type === 'mix') {\n      bex += `        \"${ispName} vless\",\\n        \"${ispName} trojan\",\\n        \"${ispName} ss\",\\n`\n      conf += `\n    {\n      \"domain_strategy\": \"ipv4_only\",\n      \"flow\": \"\",\n      \"multiplex\": {\n        \"enabled\": false,\n        \"max_streams\": 32,\n        \"protocol\": \"smux\"\n      },\n      \"packet_encoding\": \"xudp\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"tag\": \"${ispName} vless\",${snio}\n      \"transport\": {\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"max_early_data\": 0,\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"type\": \"ws\"\n      },\n      \"type\": \"vless\",\n      \"uuid\": \"${UUIDS}\"\n    },\n    {\n      \"domain_strategy\": \"ipv4_only\",\n      \"multiplex\": {\n        \"enabled\": false,\n        \"max_streams\": 32,\n        \"protocol\": \"smux\"\n      },\n      \"password\": \"${UUIDS}\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"tag\": \"${ispName} trojan\",${snio}\n      \"transport\": {\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"max_early_data\": 0,\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"type\": \"ws\"\n      },\n      \"type\": \"trojan\"\n    },\n    {\n      \"type\": \"shadowsocks\",\n      \"tag\": \"${ispName} ss\",\n      \"server\": \"${bug}\",\n      \"server_port\": 443,\n      \"method\": \"none\",\n      \"password\": \"${UUIDS}\",\n      \"plugin\": \"v2ray-plugin\",\n      \"plugin_opts\": \"mux=0;path=/${proxyHost}=${proxyPort};host=${bexnxx};tls=1\"\n    },`;\n    }\n  }\n  return `#### CREATED BY : t.me/FER1DEV ####\n### JOIN https://t.me/FER1DEV ###\n\n{\n  \"dns\": {\n    \"final\": \"dns-final\",\n    \"independent_cache\": true,\n    \"rules\": [\n      {\n        \"disable_cache\": false,\n        \"domain\": [\n          \"family.cloudflare-dns.com\",\n          \"${bug}\"\n        ],\n        \"server\": \"direct-dns\"\n      }\n    ],\n    \"servers\": [\n      {\n        \"address\": \"https://family.cloudflare-dns.com/dns-query\",\n        \"address_resolver\": \"direct-dns\",\n        \"strategy\": \"ipv4_only\",\n        \"tag\": \"remote-dns\"\n      },\n      {\n        \"address\": \"local\",\n        \"strategy\": \"ipv4_only\",\n        \"tag\": \"direct-dns\"\n      },\n      {\n        \"address\": \"local\",\n        \"address_resolver\": \"dns-local\",\n        \"strategy\": \"ipv4_only\",\n        \"tag\": \"dns-final\"\n      },\n      {\n        \"address\": \"local\",\n        \"tag\": \"dns-local\"\n      },\n      {\n        \"address\": \"rcode://success\",\n        \"tag\": \"dns-block\"\n      }\n    ]\n  },\n  \"experimental\": {\n    \"cache_file\": {\n      \"enabled\": true,\n      \"path\": \"../cache/cache.db\",\n      \"store_fakeip\": true\n    },\n    \"clash_api\": {\n      \"external_controller\": \"127.0.0.1:9090\"\n    },\n    \"v2ray_api\": {\n      \"listen\": \"127.0.0.1:0\",\n      \"stats\": {\n        \"enabled\": true,\n        \"outbounds\": [\n          \"proxy\",\n          \"direct\"\n        ]\n      }\n    }\n  },\n  \"inbounds\": [\n    {\n      \"listen\": \"0.0.0.0\",\n      \"listen_port\": 6450,\n      \"override_address\": \"8.8.8.8\",\n      \"override_port\": 53,\n      \"tag\": \"dns-in\",\n      \"type\": \"direct\"\n    },\n    {\n      \"domain_strategy\": \"\",\n      \"endpoint_independent_nat\": true,\n      \"inet4_address\": [\n        \"172.19.0.1/28\"\n      ],\n      \"mtu\": 9000,\n      \"sniff\": true,\n      \"sniff_override_destination\": true,\n      \"stack\": \"system\",\n      \"tag\": \"tun-in\",\n      \"type\": \"tun\"\n    },\n    {\n      \"domain_strategy\": \"\",\n      \"listen\": \"0.0.0.0\",\n      \"listen_port\": 2080,\n      \"sniff\": true,\n      \"sniff_override_destination\": true,\n      \"tag\": \"mixed-in\",\n      \"type\": \"mixed\"\n    }\n  ],\n  \"log\": {\n    \"level\": \"info\"\n  },\n  \"outbounds\": [\n    {\n      \"outbounds\": [\n        \"Best Latency\",\n${bex}        \"direct\"\n      ],\n      \"tag\": \"Internet\",\n      \"type\": \"selector\"\n    },\n    {\n      \"interval\": \"1m0s\",\n      \"outbounds\": [\n${bex}        \"direct\"\n      ],\n      \"tag\": \"Best Latency\",\n      \"type\": \"urltest\",\n      \"url\": \"https://detectportal.firefox.com/success.txt\"\n    },\n${conf}\n    {\n      \"tag\": \"direct\",\n      \"type\": \"direct\"\n    },\n    {\n      \"tag\": \"bypass\",\n      \"type\": \"direct\"\n    },\n    {\n      \"tag\": \"block\",\n      \"type\": \"block\"\n    },\n    {\n      \"tag\": \"dns-out\",\n      \"type\": \"dns\"\n    }\n  ],\n  \"route\": {\n    \"auto_detect_interface\": true,\n    \"rules\": [\n      {\n        \"outbound\": \"dns-out\",\n        \"port\": [\n          53\n        ]\n      },\n      {\n        \"inbound\": [\n          \"dns-in\"\n        ],\n        \"outbound\": \"dns-out\"\n      },\n      {\n        \"network\": [\n          \"udp\"\n        ],\n        \"outbound\": \"block\",\n        \"port\": [\n          443\n        ],\n        \"port_range\": []\n      },\n      {\n        \"ip_cidr\": [\n          \"224.0.0.0/3\",\n          \"ff00::/8\"\n        ],\n        \"outbound\": \"block\",\n        \"source_ip_cidr\": [\n          \"224.0.0.0/3\",\n          \"ff00::/8\"\n        ]\n      }\n    ]\n  }\n}`;\n}\nasync function generateSingboxSub(type, bug, bexnxx, tls, country = null, limit = null) {\n  const proxyListResponse = await fetch(proxyListURL);\n  const proxyList = await proxyListResponse.text();\n  let ips = proxyList\n    .split('\\n')\n    .filter(Boolean)\n  if (country && country.toLowerCase() === 'random') {\n    // Pilih data secara acak jika country=random\n    ips = ips.sort(() => Math.random() - 0.5); // Acak daftar proxy\n  } else if (country) {\n    // Filter berdasarkan country jika bukan \"random\"\n    ips = ips.filter(line => {\n      const parts = line.split(',');\n      if (parts.length > 1) {\n        const lineCountry = parts[2].toUpperCase();\n        return lineCountry === country.toUpperCase();\n      }\n      return false;\n    });\n  }\n  if (limit && !isNaN(limit)) {\n    ips = ips.slice(0, limit); // Batasi jumlah proxy berdasarkan limit\n  }\n  let conf = '';\n  let bex = '';\n  let count = 1;\n  \n  for (let line of ips) {\n    const parts = line.split(',');\n    const proxyHost = parts[0];\n    const proxyPort = parts[1] || 443;\n    const emojiFlag = getEmojiFlag(line.split(',')[2]); // Konversi ke emoji bendera\n    const sanitize = (text) => text.replace(/[\\n\\r]+/g, \"\").trim(); // Hapus newline dan spasi ekstra\n    let ispName = sanitize(`${emojiFlag} (${line.split(',')[2]}) ${line.split(',')[3]} ${count ++}`);\n    const UUIDS = `${generateUUIDv4()}`;\n    const ports = tls ? '80' : '443';\n    const snio = tls ? `\\n      \"tls\": {\\n        \"enabled\": true,\\n        \"server_name\": \"${bexnxx}\",\\n        \"insecure\": true\\n      },` : '';\n    if (type === 'vless') {\n      bex += `        \"${ispName}\",\\n`\n      conf += `\n    {\n      \"type\": \"vless\",\n      \"tag\": \"${ispName}\",\n      \"domain_strategy\": \"ipv4_only\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"uuid\": \"${UUIDS}\",${snio}\n      \"multiplex\": {\n        \"protocol\": \"smux\",\n        \"max_streams\": 32\n      },\n      \"transport\": {\n        \"type\": \"ws\",\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\"\n      },\n      \"packet_encoding\": \"xudp\"\n    },`;\n    } else if (type === 'trojan') {\n      bex += `        \"${ispName}\",\\n`\n      conf += `\n    {\n      \"type\": \"trojan\",\n      \"tag\": \"${ispName}\",\n      \"domain_strategy\": \"ipv4_only\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"password\": \"${UUIDS}\",${snio}\n      \"multiplex\": {\n        \"protocol\": \"smux\",\n        \"max_streams\": 32\n      },\n      \"transport\": {\n        \"type\": \"ws\",\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\"\n      }\n    },`;\n    } else if (type === 'ss') {\n      bex += `        \"${ispName}\",\\n`\n      conf += `\n    {\n      \"type\": \"shadowsocks\",\n      \"tag\": \"${ispName}\",\n      \"server\": \"${bug}\",\n      \"server_port\": 443,\n      \"method\": \"none\",\n      \"password\": \"${UUIDS}\",\n      \"plugin\": \"v2ray-plugin\",\n      \"plugin_opts\": \"mux=0;path=/${proxyHost}=${proxyPort};host=${bexnxx};tls=1\"\n    },`;\n    } else if (type === 'mix') {\n      bex += `        \"${ispName} vless\",\\n        \"${ispName} trojan\",\\n        \"${ispName} ss\",\\n`\n      conf += `\n    {\n      \"type\": \"vless\",\n      \"tag\": \"${ispName} vless\",\n      \"domain_strategy\": \"ipv4_only\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"uuid\": \"${UUIDS}\",${snio}\n      \"multiplex\": {\n        \"protocol\": \"smux\",\n        \"max_streams\": 32\n      },\n      \"transport\": {\n        \"type\": \"ws\",\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\"\n      },\n      \"packet_encoding\": \"xudp\"\n    },\n    {\n      \"type\": \"trojan\",\n      \"tag\": \"${ispName} trojan\",\n      \"domain_strategy\": \"ipv4_only\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"password\": \"${UUIDS}\",${snio}\n      \"multiplex\": {\n        \"protocol\": \"smux\",\n        \"max_streams\": 32\n      },\n      \"transport\": {\n        \"type\": \"ws\",\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\"\n      }\n    },\n    {\n      \"type\": \"shadowsocks\",\n      \"tag\": \"${ispName} ss\",\n      \"server\": \"${bug}\",\n      \"server_port\": 443,\n      \"method\": \"none\",\n      \"password\": \"${UUIDS}\",\n      \"plugin\": \"v2ray-plugin\",\n      \"plugin_opts\": \"mux=0;path=/${proxyHost}=${proxyPort};host=${bexnxx};tls=1\"\n    },`;\n    }\n  }\n  return `#### CREATED BY : t.me/FER1DEV ####\n### JOIN https://t.me/FER1DEV ###\n\n{\n  \"log\": {\n    \"level\": \"info\"\n  },\n  \"dns\": {\n    \"servers\": [\n      {\n        \"tag\": \"remote-dns\",\n        \"address\": \"https://family.cloudflare-dns.com/dns-query\",\n        \"address_resolver\": \"direct-dns\",\n        \"strategy\": \"ipv4_only\"\n      },\n      {\n        \"tag\": \"direct-dns\",\n        \"address\": \"local\",\n        \"strategy\": \"ipv4_only\"\n      },\n      {\n        \"tag\": \"dns-final\",\n        \"address\": \"local\",\n        \"address_resolver\": \"dns-local\",\n        \"strategy\": \"ipv4_only\"\n      },\n      {\n        \"tag\": \"dns-local\",\n        \"address\": \"local\"\n      },\n      {\n        \"tag\": \"dns-block\",\n        \"address\": \"rcode://success\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"domain\": [\n          \"family.cloudflare-dns.com\",\n          \"${bug}\"\n        ],\n        \"server\": \"direct-dns\"\n      }\n    ],\n    \"final\": \"dns-final\",\n    \"independent_cache\": true\n  },\n  \"inbounds\": [\n    {\n      \"type\": \"tun\",\n      \"mtu\": 1400,\n      \"inet4_address\": \"172.19.0.1/30\",\n      \"inet6_address\": \"fdfe:dcba:9876::1/126\",\n      \"auto_route\": true,\n      \"strict_route\": true,\n      \"endpoint_independent_nat\": true,\n      \"stack\": \"mixed\",\n      \"sniff\": true\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"tag\": \"Internet\",\n      \"type\": \"selector\",\n      \"outbounds\": [\n        \"Best Latency\",\n${bex}        \"direct\"\n      ]\n    },\n    {\n      \"type\": \"urltest\",\n      \"tag\": \"Best Latency\",\n      \"outbounds\": [\n${bex}        \"direct\"\n      ],\n      \"url\": \"https://ping.bexnxx.us.kg\",\n      \"interval\": \"30s\"\n    },\n${conf}\n    {\n      \"type\": \"direct\",\n      \"tag\": \"direct\"\n    },\n    {\n      \"type\": \"direct\",\n      \"tag\": \"bypass\"\n    },\n    {\n      \"type\": \"block\",\n      \"tag\": \"block\"\n    },\n    {\n      \"type\": \"dns\",\n      \"tag\": \"dns-out\"\n    }\n  ],\n  \"route\": {\n    \"rules\": [\n      {\n        \"port\": 53,\n        \"outbound\": \"dns-out\"\n      },\n      {\n        \"inbound\": \"dns-in\",\n        \"outbound\": \"dns-out\"\n      },\n      {\n        \"network\": \"udp\",\n        \"port\": 443,\n        \"outbound\": \"block\"\n      },\n      {\n        \"source_ip_cidr\": [\n          \"224.0.0.0/3\",\n          \"ff00::/8\"\n        ],\n        \"ip_cidr\": [\n          \"224.0.0.0/3\",\n          \"ff00::/8\"\n        ],\n        \"outbound\": \"block\"\n      }\n    ],\n    \"auto_detect_interface\": true\n  },\n  \"experimental\": {\n    \"cache_file\": {\n      \"enabled\": false\n    },\n    \"clash_api\": {\n      \"external_controller\": \"127.0.0.1:9090\",\n      \"external_ui\": \"ui\",\n      \"external_ui_download_url\": \"https://github.com/MetaCubeX/metacubexd/archive/gh-pages.zip\",\n      \"external_ui_download_detour\": \"Internet\",\n      \"secret\": \"bitzblack\",\n      \"default_mode\": \"rule\"\n    }\n  }\n}`;\n}\nasync function generateNekoboxSub(type, bug, bexnxx, tls, country = null, limit = null) {\n  const proxyListResponse = await fetch(proxyListURL);\n  const proxyList = await proxyListResponse.text();\n  let ips = proxyList\n    .split('\\n')\n    .filter(Boolean)\n  if (country && country.toLowerCase() === 'random') {\n    // Pilih data secara acak jika country=random\n    ips = ips.sort(() => Math.random() - 0.5); // Acak daftar proxy\n  } else if (country) {\n    // Filter berdasarkan country jika bukan \"random\"\n    ips = ips.filter(line => {\n      const parts = line.split(',');\n      if (parts.length > 1) {\n        const lineCountry = parts[2].toUpperCase();\n        return lineCountry === country.toUpperCase();\n      }\n      return false;\n    });\n  }\n  if (limit && !isNaN(limit)) {\n    ips = ips.slice(0, limit); // Batasi jumlah proxy berdasarkan limit\n  }\n  let conf = '';\n  let bex = '';\n  let count = 1;\n  \n  for (let line of ips) {\n    const parts = line.split(',');\n    const proxyHost = parts[0];\n    const proxyPort = parts[1] || 443;\n    const emojiFlag = getEmojiFlag(line.split(',')[2]); // Konversi ke emoji bendera\n    const sanitize = (text) => text.replace(/[\\n\\r]+/g, \"\").trim(); // Hapus newline dan spasi ekstra\n    let ispName = sanitize(`${emojiFlag} (${line.split(',')[2]}) ${line.split(',')[3]} ${count ++}`);\n    const UUIDS = `${generateUUIDv4()}`;\n    const ports = tls ? '80' : '443';\n    const snio = tls ? `\\n      \"tls\": {\\n        \"disable_sni\": false,\\n        \"enabled\": true,\\n        \"insecure\": true,\\n        \"server_name\": \"${bexnxx}\"\\n      },` : '';\n    if (type === 'vless') {\n      bex += `        \"${ispName}\",\\n`\n      conf += `\n    {\n      \"domain_strategy\": \"ipv4_only\",\n      \"flow\": \"\",\n      \"multiplex\": {\n        \"enabled\": false,\n        \"max_streams\": 32,\n        \"protocol\": \"smux\"\n      },\n      \"packet_encoding\": \"xudp\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"tag\": \"${ispName}\",${snio}\n      \"transport\": {\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"max_early_data\": 0,\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"type\": \"ws\"\n      },\n      \"type\": \"vless\",\n      \"uuid\": \"${UUIDS}\"\n    },`;\n    } else if (type === 'trojan') {\n      bex += `        \"${ispName}\",\\n`\n      conf += `\n    {\n      \"domain_strategy\": \"ipv4_only\",\n      \"multiplex\": {\n        \"enabled\": false,\n        \"max_streams\": 32,\n        \"protocol\": \"smux\"\n      },\n      \"password\": \"${UUIDS}\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"tag\": \"${ispName}\",${snio}\n      \"transport\": {\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"max_early_data\": 0,\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"type\": \"ws\"\n      },\n      \"type\": \"trojan\"\n    },`;\n    } else if (type === 'ss') {\n      bex += `        \"${ispName}\",\\n`\n      conf += `\n    {\n      \"type\": \"shadowsocks\",\n      \"tag\": \"${ispName}\",\n      \"server\": \"${bug}\",\n      \"server_port\": 443,\n      \"method\": \"none\",\n      \"password\": \"${UUIDS}\",\n      \"plugin\": \"v2ray-plugin\",\n      \"plugin_opts\": \"mux=0;path=/${proxyHost}=${proxyPort};host=${bexnxx};tls=1\"\n    },`;\n    } else if (type === 'mix') {\n      bex += `        \"${ispName} vless\",\\n        \"${ispName} trojan\",\\n        \"${ispName} ss\",\\n`\n      conf += `\n    {\n      \"domain_strategy\": \"ipv4_only\",\n      \"flow\": \"\",\n      \"multiplex\": {\n        \"enabled\": false,\n        \"max_streams\": 32,\n        \"protocol\": \"smux\"\n      },\n      \"packet_encoding\": \"xudp\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"tag\": \"${ispName} vless\",${snio}\n      \"transport\": {\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"max_early_data\": 0,\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"type\": \"ws\"\n      },\n      \"type\": \"vless\",\n      \"uuid\": \"${UUIDS}\"\n    },\n    {\n      \"domain_strategy\": \"ipv4_only\",\n      \"multiplex\": {\n        \"enabled\": false,\n        \"max_streams\": 32,\n        \"protocol\": \"smux\"\n      },\n      \"password\": \"${UUIDS}\",\n      \"server\": \"${bug}\",\n      \"server_port\": ${ports},\n      \"tag\": \"${ispName} trojan\",${snio}\n      \"transport\": {\n        \"early_data_header_name\": \"Sec-WebSocket-Protocol\",\n        \"headers\": {\n          \"Host\": \"${bexnxx}\"\n        },\n        \"max_early_data\": 0,\n        \"path\": \"/${proxyHost}=${proxyPort}\",\n        \"type\": \"ws\"\n      },\n      \"type\": \"trojan\"\n    },\n    {\n      \"type\": \"shadowsocks\",\n      \"tag\": \"${ispName} ss\",\n      \"server\": \"${bug}\",\n      \"server_port\": 443,\n      \"method\": \"none\",\n      \"password\": \"${UUIDS}\",\n      \"plugin\": \"v2ray-plugin\",\n      \"plugin_opts\": \"mux=0;path=/${proxyHost}=${proxyPort};host=${bexnxx};tls=1\"\n    },`;\n    }\n  }\n  return `#### CREATED BY : t.me/FER1DEV ####\n### JOIN https://t.me/FER1DEV ###\n\n{\n  \"dns\": {\n    \"final\": \"dns-final\",\n    \"independent_cache\": true,\n    \"rules\": [\n      {\n        \"disable_cache\": false,\n        \"domain\": [\n          \"family.cloudflare-dns.com\",\n          \"${bug}\"\n        ],\n        \"server\": \"direct-dns\"\n      }\n    ],\n    \"servers\": [\n      {\n        \"address\": \"https://family.cloudflare-dns.com/dns-query\",\n        \"address_resolver\": \"direct-dns\",\n        \"strategy\": \"ipv4_only\",\n        \"tag\": \"remote-dns\"\n      },\n      {\n        \"address\": \"local\",\n        \"strategy\": \"ipv4_only\",\n        \"tag\": \"direct-dns\"\n      },\n      {\n        \"address\": \"local\",\n        \"address_resolver\": \"dns-local\",\n        \"strategy\": \"ipv4_only\",\n        \"tag\": \"dns-final\"\n      },\n      {\n        \"address\": \"local\",\n        \"tag\": \"dns-local\"\n      },\n      {\n        \"address\": \"rcode://success\",\n        \"tag\": \"dns-block\"\n      }\n    ]\n  },\n  \"experimental\": {\n    \"cache_file\": {\n      \"enabled\": true,\n      \"path\": \"../cache/clash.db\",\n      \"store_fakeip\": true\n    },\n    \"clash_api\": {\n      \"external_controller\": \"127.0.0.1:9090\",\n      \"external_ui\": \"../files/yacd\"\n    }\n  },\n  \"inbounds\": [\n    {\n      \"listen\": \"0.0.0.0\",\n      \"listen_port\": 6450,\n      \"override_address\": \"8.8.8.8\",\n      \"override_port\": 53,\n      \"tag\": \"dns-in\",\n      \"type\": \"direct\"\n    },\n    {\n      \"domain_strategy\": \"\",\n      \"endpoint_independent_nat\": true,\n      \"inet4_address\": [\n        \"172.19.0.1/28\"\n      ],\n      \"mtu\": 9000,\n      \"sniff\": true,\n      \"sniff_override_destination\": true,\n      \"stack\": \"system\",\n      \"tag\": \"tun-in\",\n      \"type\": \"tun\"\n    },\n    {\n      \"domain_strategy\": \"\",\n      \"listen\": \"0.0.0.0\",\n      \"listen_port\": 2080,\n      \"sniff\": true,\n      \"sniff_override_destination\": true,\n      \"tag\": \"mixed-in\",\n      \"type\": \"mixed\"\n    }\n  ],\n  \"log\": {\n    \"level\": \"info\"\n  },\n  \"outbounds\": [\n    {\n      \"outbounds\": [\n        \"Best Latency\",\n${bex}        \"direct\"\n      ],\n      \"tag\": \"Internet\",\n      \"type\": \"selector\"\n    },\n    {\n      \"interval\": \"1m0s\",\n      \"outbounds\": [\n${bex}        \"direct\"\n      ],\n      \"tag\": \"Best Latency\",\n      \"type\": \"urltest\",\n      \"url\": \"https://detectportal.firefox.com/success.txt\"\n    },\n${conf}\n    {\n      \"tag\": \"direct\",\n      \"type\": \"direct\"\n    },\n    {\n      \"tag\": \"bypass\",\n      \"type\": \"direct\"\n    },\n    {\n      \"tag\": \"block\",\n      \"type\": \"block\"\n    },\n    {\n      \"tag\": \"dns-out\",\n      \"type\": \"dns\"\n    }\n  ],\n  \"route\": {\n    \"auto_detect_interface\": true,\n    \"rules\": [\n      {\n        \"outbound\": \"dns-out\",\n        \"port\": [\n          53\n        ]\n      },\n      {\n        \"inbound\": [\n          \"dns-in\"\n        ],\n        \"outbound\": \"dns-out\"\n      },\n      {\n        \"network\": [\n          \"udp\"\n        ],\n        \"outbound\": \"block\",\n        \"port\": [\n          443\n        ],\n        \"port_range\": []\n      },\n      {\n        \"ip_cidr\": [\n          \"224.0.0.0/3\",\n          \"ff00::/8\"\n        ],\n        \"outbound\": \"block\",\n        \"source_ip_cidr\": [\n          \"224.0.0.0/3\",\n          \"ff00::/8\"\n        ]\n      }\n    ]\n  }\n}`;\n}\nasync function utf8ToBase64(str) {\n    return btoa(unescape(encodeURIComponent(str)));\n    }\n\nasync function generateV2rayngSub(type, bug, bexnxx, tls, country = null, limit = null) {\n  const proxyListResponse = await fetch(proxyListURL);\n  const proxyList = await proxyListResponse.text();\n  let ips = proxyList\n    .split('\\n')\n    .filter(Boolean);\n\n  if (country && country.toLowerCase() === 'random') {\n    // Pilih data secara acak jika country=random\n    ips = ips.sort(() => Math.random() - 0.5); // Acak daftar proxy\n  } else if (country) {\n    // Filter berdasarkan country jika bukan \"random\"\n    ips = ips.filter(line => {\n      const parts = line.split(',');\n      if (parts.length > 1) {\n        const lineCountry = parts[2].toUpperCase();\n        return lineCountry === country.toUpperCase();\n      }\n      return false;\n    });\n  }\n  \n  if (limit && !isNaN(limit)) {\n    ips = ips.slice(0, limit); // Batasi jumlah proxy berdasarkan limit\n  }\n\n  let conf = '';\n\n  for (let line of ips) {\n    const parts = line.split(',');\n    const proxyHost = parts[0];\n    const proxyPort = parts[1] || 443;\n    const countryCode = parts[2]; // Kode negara ISO\n    const isp = parts[3]; // Informasi ISP\n\n    // Gunakan teks Latin-1 untuk menggantikan emoji flag\n    const countryText = `[${countryCode}]`; // Format bendera ke teks Latin-1\n    const ispInfo = `${countryText} ${isp}`;\n    const UUIDS = `${generateUUIDv4()}`;\n    const ports = tls ? '80' : '443';\n\n    if (type === 'vless') {\n      if (tls) {\n        conf += `vless://${UUIDS}\\u0040${bug}:${ports}?encryption=none&security=tls&sni=${bexnxx}&fp=randomized&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}#${ispInfo}\\n`;\n      } else {\n        conf += `vless://${UUIDS}\\u0040${bug}:${ports}?path=%2F${proxyHost}%3D${proxyPort}&security=none&encryption=none&host=${bexnxx}&fp=randomized&type=ws&sni=${bexnxx}#${ispInfo}\\n`;\n      }\n    } else if (type === 'trojan') {\n      if (tls) {\n        conf += `trojan://${UUIDS}\\u0040${bug}:${ports}?encryption=none&security=tls&sni=${bexnxx}&fp=randomized&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}#${ispInfo}\\n`;\n      } else {\n        conf += `trojan://${UUIDS}\\u0040${bug}:${ports}?path=%2F${proxyHost}%3D${proxyPort}&security=none&encryption=none&host=${bexnxx}&fp=randomized&type=ws&sni=${bexnxx}#${ispInfo}\\n`;\n      }\n    } else if (type === 'ss') {\n      if (tls) {\n        conf += `ss://${btoa(`none:${UUIDS}`)}%3D@${bug}:${ports}?encryption=none&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}&security=tls&sni=${bexnxx}#${ispInfo}\\n`;\n      } else {\n        conf += `ss://${btoa(`none:${UUIDS}`)}%3D@${bug}:${ports}?encryption=none&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}&security=none&sni=${bexnxx}#${ispInfo}\\n`;\n      }\n    } else if (type === 'mix') {\n      if (tls) {\n        conf += `vless://${UUIDS}\\u0040${bug}:${ports}?encryption=none&security=tls&sni=${bexnxx}&fp=randomized&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}#${ispInfo}\\n`;\n        conf += `trojan://${UUIDS}\\u0040${bug}:${ports}?encryption=none&security=tls&sni=${bexnxx}&fp=randomized&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}#${ispInfo}\\n`;\n        conf += `ss://${btoa(`none:${UUIDS}`)}%3D@${bug}:${ports}?encryption=none&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}&security=tls&sni=${bexnxx}#${ispInfo}\\n`;\n      } else {\n        conf += `vless://${UUIDS}\\u0040${bug}:${ports}?path=%2F${proxyHost}%3D${proxyPort}&security=none&encryption=none&host=${bexnxx}&fp=randomized&type=ws&sni=${bexnxx}#${ispInfo}\\n`;\n        conf += `trojan://${UUIDS}\\u0040${bug}:${ports}?path=%2F${proxyHost}%3D${proxyPort}&security=none&encryption=none&host=${bexnxx}&fp=randomized&type=ws&sni=${bexnxx}#${ispInfo}\\n`;\n        conf += `ss://${btoa(`none:${UUIDS}`)}%3D@${bug}:${ports}?encryption=none&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}&security=none&sni=${bexnxx}#${ispInfo}\\n`;\n      }\n    }\n  }\n\n  const base64Conf = utf8ToBase64(conf.replace(/ /g, '%20'));\n\n  return base64Conf;\n}\nasync function generateV2raySub(type, bug, bexnxx, tls, country = null, limit = null) {\n  const proxyListResponse = await fetch(proxyListURL);\n  const proxyList = await proxyListResponse.text();\n  let ips = proxyList\n    .split('\\n')\n    .filter(Boolean)\n  if (country && country.toLowerCase() === 'random') {\n    // Pilih data secara acak jika country=random\n    ips = ips.sort(() => Math.random() - 0.5); // Acak daftar proxy\n  } else if (country) {\n    // Filter berdasarkan country jika bukan \"random\"\n    ips = ips.filter(line => {\n      const parts = line.split(',');\n      if (parts.length > 1) {\n        const lineCountry = parts[2].toUpperCase();\n        return lineCountry === country.toUpperCase();\n      }\n      return false;\n    });\n  }\n  if (limit && !isNaN(limit)) {\n    ips = ips.slice(0, limit); // Batasi jumlah proxy berdasarkan limit\n  }\n  let conf = '';\n  for (let line of ips) {\n    const parts = line.split(',');\n    const proxyHost = parts[0];\n    const proxyPort = parts[1] || 443;\n    const emojiFlag = getEmojiFlag(line.split(',')[2]); // Konversi ke emoji bendera\n    const UUIDS = generateUUIDv4();\n    const ports = tls ? '80' : '443';\n    const information = encodeURIComponent(`${emojiFlag} (${line.split(',')[2]}) ${line.split(',')[3]}`);\n    if (type === 'vless') {\n      if (tls) {\n        conf += `vless://${UUIDS}@${bug}:${ports}?path=%2F${proxyHost}%3D${proxyPort}&security=none&encryption=none&host=${bexnxx}&fp=randomized&type=ws&sni=${bexnxx}#${information}\\n`;\n      } else {\n        conf += `vless://${UUIDS}@${bug}:${ports}?encryption=none&security=tls&sni=${bexnxx}&fp=randomized&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}#${information}\\n`;\n      }\n    } else if (type === 'trojan') {\n      if (tls) {\n        conf += `trojan://${UUIDS}@${bug}:${ports}?path=%2F${proxyHost}%3D${proxyPort}&security=none&encryption=none&host=${bexnxx}&fp=randomized&type=ws&sni=${bexnxx}#${information}\\n`;\n      } else {\n        conf += `trojan://${UUIDS}@${bug}:${ports}?encryption=none&security=tls&sni=${bexnxx}&fp=randomized&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}#${information}\\n`;\n      }\n    } else if (type === 'ss') {\n      if (tls) {\n        conf += `ss://${btoa(`none:${UUIDS}`)}%3D@${bug}:${ports}?encryption=none&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}&security=none&sni=${bexnxx}#${information}\\n`;\n      } else {\n        conf += `ss://${btoa(`none:${UUIDS}`)}%3D@${bug}:${ports}?encryption=none&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}&security=tls&sni=${bexnxx}#${information}\\n`;\n      }\n    } else if (type === 'mix') {\n      if (tls) {\n        conf += `vless://${UUIDS}@${bug}:${ports}?path=%2F${proxyHost}%3D${proxyPort}&security=none&encryption=none&host=${bexnxx}&fp=randomized&type=ws&sni=${bexnxx}#${information}\\n`;\n        conf += `trojan://${UUIDS}@${bug}:${ports}?path=%2F${proxyHost}%3D${proxyPort}&security=none&encryption=none&host=${bexnxx}&fp=randomized&type=ws&sni=${bexnxx}#${information}\\n`;\n        conf += `ss://${btoa(`none:${UUIDS}`)}%3D@${bug}:${ports}?encryption=none&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}&security=none&sni=${bexnxx}#${information}\\n`;\n      } else {\n        conf += `vless://${UUIDS}@${bug}:${ports}?encryption=none&security=tls&sni=${bexnxx}&fp=randomized&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}#${information}\\n`;\n        conf += `trojan://${UUIDS}@${bug}:${ports}?encryption=none&security=tls&sni=${bexnxx}&fp=randomized&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}#${information}\\n`;\n        conf += `ss://${btoa(`none:${UUIDS}`)}%3D@${bug}:${ports}?encryption=none&type=ws&host=${bexnxx}&path=%2F${proxyHost}%3D${proxyPort}&security=tls&sni=${bexnxx}#${information}\\n`;\n      }\n    }\n  }\n  \n  return conf;\n}\nfunction generateUUIDv4() {\n  const randomValues = crypto.getRandomValues(new Uint8Array(16));\n  randomValues[6] = (randomValues[6] & 0x0f) | 0x40;\n  randomValues[8] = (randomValues[8] & 0x3f) | 0x80;\n  return [\n    randomValues[0].toString(16).padStart(2, '0'),\n    randomValues[1].toString(16).padStart(2, '0'),\n    randomValues[2].toString(16).padStart(2, '0'),\n    randomValues[3].toString(16).padStart(2, '0'),\n    randomValues[4].toString(16).padStart(2, '0'),\n    randomValues[5].toString(16).padStart(2, '0'),\n    randomValues[6].toString(16).padStart(2, '0'),\n    randomValues[7].toString(16).padStart(2, '0'),\n    randomValues[8].toString(16).padStart(2, '0'),\n    randomValues[9].toString(16).padStart(2, '0'),\n    randomValues[10].toString(16).padStart(2, '0'),\n    randomValues[11].toString(16).padStart(2, '0'),\n    randomValues[12].toString(16).padStart(2, '0'),\n    randomValues[13].toString(16).padStart(2, '0'),\n    randomValues[14].toString(16).padStart(2, '0'),\n    randomValues[15].toString(16).padStart(2, '0'),\n  ].join('').replace(/^(.{8})(.{4})(.{4})(.{4})(.{12})$/, '$1-$2-$3-$4-$5');\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/app/jambol.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/jules/.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/jules/.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/app/jambol.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/app/.wrangler/tmp/bundle-9hSXaz/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/jules/.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/app/.wrangler/tmp/bundle-9hSXaz/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/app/.wrangler/tmp/bundle-9hSXaz/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA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",
  "names": ["proxyIP", "configs", "generateUUIDv4", "url", "tcpSocket"]
}
